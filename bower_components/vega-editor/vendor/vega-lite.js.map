{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/browser-resolve/empty.js",
    "node_modules/d3-time/build/d3-time.js",
    "node_modules/datalib/src/bins/bins.js",
    "node_modules/datalib/src/generate.js",
    "node_modules/datalib/src/time.js",
    "node_modules/datalib/src/util.js",
    "src/aggregate.ts",
    "src/bin.ts",
    "src/channel.ts",
    "src/compiler/Model.ts",
    "src/compiler/axis.ts",
    "src/compiler/compiler.ts",
    "src/compiler/data.ts",
    "src/compiler/facet.ts",
    "src/compiler/layout.ts",
    "src/compiler/legend.ts",
    "src/compiler/marks.ts",
    "src/compiler/scale.ts",
    "src/compiler/stack.ts",
    "src/compiler/time.ts",
    "src/data.ts",
    "src/encoding.ts",
    "src/fielddef.ts",
    "src/mark.ts",
    "src/schema/axis.schema.ts",
    "src/schema/bin.schema.ts",
    "src/schema/config.cell.schema.ts",
    "src/schema/config.marks.schema.ts",
    "src/schema/config.schema.ts",
    "src/schema/config.stack.schema.ts",
    "src/schema/data.schema.ts",
    "src/schema/encoding.schema.ts",
    "src/schema/fielddef.schema.ts",
    "src/schema/legend.schema.ts",
    "src/schema/mark.schema.ts",
    "src/schema/scale.schema.ts",
    "src/schema/schema.ts",
    "src/schema/schemautil.ts",
    "src/schema/sort.schema.ts",
    "src/shorthand.ts",
    "src/spec.ts",
    "src/timeunit.ts",
    "src/type.ts",
    "src/util.ts",
    "src/validate.ts",
    "src/vl.ts"
  ],
  "names": [],
  "mappingsjWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "",
    "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getSeconds();\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.1.0\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));",
    "var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n",
    "var util = require('./util'),\n    gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x >= min && x <= max) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    return x < min ? 0 : x > max ? 1 : (x - min) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? min + p*d : NaN;\n  };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x === Math.floor(x) && x >= a && x < b) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    var v = Math.floor(x);\n    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p*d) : NaN;\n  };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    var exp = Math.exp(Math.pow(x-mean, 2) / (-2 * Math.pow(stdev, 2)));\n    return (1 / (stdev * Math.sqrt(2*Math.PI))) * exp;\n  };\n  f.cdf = function(x) {\n    // Approximation from West (2009)\n    // Better Approximations to Cumulative Normal Functions\n    var cd,\n        z = (x - mean) / stdev,\n        Z = Math.abs(z);\n    if (Z > 37) {\n      cd = 0;\n    } else {\n      var sum, exp = Math.exp(-Z*Z/2);\n      if (Z < 7.07106781186547) {\n        sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n        sum = sum * Z + 6.37396220353165;\n        sum = sum * Z + 33.912866078383;\n        sum = sum * Z + 112.079291497871;\n        sum = sum * Z + 221.213596169931;\n        sum = sum * Z + 220.206867912376;\n        cd = exp * sum;\n        sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n        sum = sum * Z + 16.064177579207;\n        sum = sum * Z + 86.7807322029461;\n        sum = sum * Z + 296.564248779674;\n        sum = sum * Z + 637.333633378831;\n        sum = sum * Z + 793.826512519948;\n        sum = sum * Z + 440.413735824752;\n        cd = cd / sum;\n      } else {\n        sum = Z + 0.65;\n        sum = Z + 4 / sum;\n        sum = Z + 3 / sum;\n        sum = Z + 2 / sum;\n        sum = Z + 1 / sum;\n        cd = exp / sum / 2.506628274631;\n      }\n    }\n    return z > 0 ? 1 - cd : cd;\n  };\n  f.icdf = function(p) {\n    // Approximation of Probit function using inverse error function.\n    if (p <= 0 || p >= 1) return NaN;\n    var x = 2*p - 1,\n        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),\n        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),\n        b = Math.log(1 - (x*x)) / v,\n        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);\n    return mean + stdev * Math.SQRT2 * s;\n  };\n  return f;\n};\n\ngen.random.bootstrap = function(domain, smooth) {\n  // Generates a bootstrap sample from a set of observations.\n  // Smooth bootstrapping adds random zero-centered noise to the samples.\n  var val = domain.filter(util.isValid),\n      len = val.length,\n      err = smooth ? gen.random.normal(0, smooth) : null;\n  var f = function() {\n    return val[~~(Math.random()*len)] + (err ? err() : 0);\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  return f;\n};",
    "var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);",
    "var buffer = require('buffer'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports = {};\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (buffer.Buffer && buffer.Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\n// parse a date with optional d3.time-format format\nu.date = function(s, format) {\n  var d = format ? format : Date;\n  return s == null || s === '' ? null : d.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\nu.$year   = u.$func('year', time.year.unit);\nu.$month  = u.$func('month', time.months.unit);\nu.$date   = u.$func('date', time.dates.unit);\nu.$day    = u.$func('day', time.weekdays.unit);\nu.$hour   = u.$func('hour', time.hours.unit);\nu.$minute = u.$func('minute', time.minutes.unit);\nu.$second = u.$func('second', time.seconds.unit);\n\nu.$utcYear   = u.$func('utcYear', utc.year.unit);\nu.$utcMonth  = u.$func('utcMonth', utc.months.unit);\nu.$utcDate   = u.$func('utcDate', utc.dates.unit);\nu.$utcDay    = u.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = u.$func('utcHour', utc.hours.unit);\nu.$utcMinute = u.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = u.$func('utcSecond', utc.seconds.unit);\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n",
    "export const AGGREGATE_OPS = [\n  'values', 'count', 'valid', 'missing', 'distinct',\n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev',\n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max',\n  'argmin', 'argmax'\n];\n\nexport const SHARED_DOMAIN_OPS = [\n  'mean', 'average', 'stdev', 'stdevp', 'median', 'q1', 'q3', 'min', 'max'\n];\n\n// TODO: move supportedTypes, supportedEnums from schema to here\n",
    "import {Channel, ROW, COLUMN, SHAPE} from './channel';\n\nexport function autoMaxBins(channel: Channel): number {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n      // Facet shouldn't have too many bins\n      // We choose 6 like shape to simplify the rule\n    case SHAPE:\n      return 6; // Vega's \"shape\" has 6 distinct values\n    default:\n      return 10;\n  }\n}\n",
    "/*\n * Constants and utilities for encoding channels (Visual variables)\n * such as 'x', 'y', 'color'.\n */\n\nimport {Mark} from './mark';\n\nexport enum Channel {\n  X = 'x' as any,\n  Y = 'y' as any,\n  ROW = 'row' as any,\n  COLUMN = 'column' as any,\n  SHAPE = 'shape' as any,\n  SIZE = 'size' as any,\n  COLOR = 'color' as any,\n  TEXT = 'text' as any,\n  DETAIL = 'detail' as any\n}\n\nexport const X = Channel.X;\nexport const Y = Channel.Y;\nexport const ROW = Channel.ROW;\nexport const COLUMN = Channel.COLUMN;\nexport const SHAPE = Channel.SHAPE;\nexport const SIZE = Channel.SIZE;\nexport const COLOR = Channel.COLOR;\nexport const TEXT = Channel.TEXT;\nexport const DETAIL = Channel.DETAIL;\n\nexport const CHANNELS = [X, Y, ROW, COLUMN, SIZE, SHAPE, COLOR, TEXT, DETAIL];\n\ninterface SupportedMark {\n  point?: boolean;\n  tick?: boolean;\n  circle?: boolean;\n  square?: boolean;\n  bar?: boolean;\n  line?: boolean;\n  area?: boolean;\n  text?: boolean;\n};\n\n/**\n * Return whether a channel supports a particular mark type.\n * @param channel  channel name\n * @param mark the mark type\n * @return whether the mark supports the channel\n */\nexport function supportMark(channel: Channel, mark: Mark) {\n  return !!getSupportedMark(channel)[mark];\n}\n\n/**\n * Return a dictionary showing whether a channel supports mark type.\n * @param channel\n * @return A dictionary mapping mark types to boolean values.\n */\nexport function getSupportedMark(channel: Channel): SupportedMark {\n  switch (channel) {\n    case X:\n    case Y:\n      return {\n        point: true, tick: true, circle: true, square: true ,\n        bar: true, line: true, area: true\n      };\n    case ROW:\n    case COLUMN:\n      return {\n        point: true, tick: true, circle: true, square: true,\n        bar: true, line: true, area: true, text: true\n      };\n    case SIZE:\n      return {\n        point: true, tick: true, circle: true, square: true,\n        bar: true, text: true\n      };\n    case COLOR:\n    case DETAIL:\n      return {\n        point: true, tick: true, circle: true, square: true,\n        bar: true, line: true, area: true, text: true\n      };\n    case SHAPE:\n      return {point: true};\n    case TEXT:\n      return {text: true};\n  }\n  return {};\n}\n\ninterface SupportedRole {\n  measure: boolean;\n  dimension: boolean;\n};\n\n/**\n * Return whether a channel supports dimension / measure role\n * @param  channel\n * @return A dictionary mapping role to boolean values.\n */\nexport function getSupportedRole(channel: Channel): SupportedRole {\n  switch (channel) {\n    case X:\n    case Y:\n    case COLOR:\n      return {\n        measure: true,\n        dimension: true\n      };\n    case ROW:\n    case COLUMN:\n    case SHAPE:\n    case DETAIL:\n      return {\n        measure: false,\n        dimension: true\n      };\n    case SIZE:\n    case TEXT:\n      return {\n        measure: true,\n        dimension: false\n      };\n  }\n  throw new Error('Invalid encoding channel' + channel);\n}\n",
    "import {Spec} from '../schema/schema';\nimport {FieldDef} from '../schema/fielddef.schema';\n\nimport {COLUMN, ROW, X, Y, COLOR, DETAIL, Channel} from '../channel';\nimport {SOURCE, SUMMARY} from '../data';\nimport * as vlFieldDef from '../fielddef';\nimport * as vlEncoding from '../encoding';\nimport {compileLayout} from './layout';\nimport {AREA, BAR, POINT, TICK, CIRCLE, SQUARE, Mark} from '../mark';\nimport * as schema from '../schema/schema';\nimport * as schemaUtil from '../schema/schemautil';\nimport {StackProperties} from './stack';\nimport {getFullName, NOMINAL, ORDINAL, TEMPORAL} from '../type';\nimport {contains, duplicate} from '../util';\nimport * as time from './time';\nimport {Encoding} from '../schema/encoding.schema';\n\n\ninterface FieldRefOption {\n  /** exclude bin, aggregate, timeUnit */\n  nofn?: boolean;\n  /** exclude aggregation function */\n  noAggregate?: boolean;\n  /** include 'datum.' */\n  datum?: boolean;\n  /** replace fn with custom function prefix */\n  fn?: string;\n  /** prepend fn with custom function prefix */\n  prefn?: string;\n  /** append suffix to the field ref for bin (default='_start') */\n  binSuffix?: string;\n}\n\n\n/**\n * Internal model of Vega-Lite specification for the compiler.\n */\n\nexport class Model {\n  private _spec: Spec;\n  private _stack: StackProperties;\n  private _layout: any;\n\n  // TODO: include _stack, _layout, _style, etc.\n\n  constructor(spec: Spec, theme?) {\n    var defaults = schema.instantiate();\n    this._spec = schemaUtil.merge(defaults, theme || {}, spec);\n\n    // convert short type to full type\n    vlEncoding.forEach(this._spec.encoding, function(fieldDef: FieldDef, channel: Channel) {\n      if (fieldDef.type) {\n        fieldDef.type = getFullName(fieldDef.type);\n      }\n    });\n\n    // calculate stack\n    this._stack = this.getStackProperties();\n    this._layout = compileLayout(this);\n  }\n\n  private getStackProperties(): StackProperties {\n    var stackChannel = (this.has(COLOR)) ? COLOR : (this.has(DETAIL)) ? DETAIL : null;\n\n    if (stackChannel &&\n      (this.is(BAR) || this.is(AREA)) &&\n      this.config('stack') !== false &&\n      this.isAggregate()) {\n      var isXMeasure = this.isMeasure(X);\n      var isYMeasure = this.isMeasure(Y);\n\n      if (isXMeasure && !isYMeasure) {\n        return {\n          groupbyChannel: Y,\n          fieldChannel: X,\n          stackChannel: stackChannel,\n          config: this.config('stack')\n        };\n      } else if (isYMeasure && !isXMeasure) {\n        return {\n          groupbyChannel: X,\n          fieldChannel: Y,\n          stackChannel: stackChannel,\n          config: this.config('stack')\n        };\n      }\n    }\n    return null;\n  }\n\n  public layout(): any {\n    return this._layout;\n  }\n\n  public stack(): StackProperties {\n    return this._stack;\n  }\n\n  public toSpec(excludeConfig?, excludeData?) {\n    var encoding = duplicate(this._spec.encoding),\n      spec: any;\n\n    spec = {\n      mark: this._spec.mark,\n      encoding: encoding\n    };\n\n    if (!excludeConfig) {\n      spec.config = duplicate(this._spec.config);\n    }\n\n    if (!excludeData) {\n      spec.data = duplicate(this._spec.data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schemaUtil.subtract(spec, defaults);\n  }\n\n  public mark(): Mark {\n    return this._spec.mark;\n  }\n\n  public spec(): Spec {\n    return this._spec;\n  }\n\n  public is(mark: Mark) {\n    return this._spec.mark === mark;\n  }\n\n  public has(channel: Channel) {\n    // equivalent to calling vlenc.has(this._spec.encoding, channel)\n    return this._spec.encoding[channel].field !== undefined;\n  }\n\n  public fieldDef(channel: Channel): FieldDef {\n    return this._spec.encoding[channel];\n  }\n\n  // get \"field\" reference for vega\n  public field(channel: Channel, opt?: FieldRefOption) {\n    opt = opt || {};\n\n    const fieldDef = this.fieldDef(channel);\n\n    var f = (opt.datum ? 'datum.' : '') + (opt.prefn || ''),\n      field = fieldDef.field;\n\n    if (vlFieldDef.isCount(fieldDef)) {\n      return f + 'count';\n    } else if (opt.fn) {\n      return f + opt.fn + '_' + field;\n    } else if (!opt.nofn && fieldDef.bin) {\n      var binSuffix = opt.binSuffix || '_start';\n      return f + 'bin_' + field + binSuffix;\n    } else if (!opt.nofn && !opt.noAggregate && fieldDef.aggregate) {\n      return f + fieldDef.aggregate + '_' + field;\n    } else if (!opt.nofn && fieldDef.timeUnit) {\n      return f + fieldDef.timeUnit + '_' + field;\n    } else {\n      return f + field;\n    }\n  }\n\n  public fieldTitle(channel: Channel): string {\n    if (vlFieldDef.isCount(this._spec.encoding[channel])) {\n      return vlFieldDef.COUNT_DISPLAYNAME;\n    }\n    var fn = this._spec.encoding[channel].aggregate || this._spec.encoding[channel].timeUnit || (this._spec.encoding[channel].bin && 'bin');\n    if (fn) {\n      return fn.toUpperCase() + '(' + this._spec.encoding[channel].field + ')';\n    } else {\n      return this._spec.encoding[channel].field;\n    }\n  }\n\n  public numberFormat(channel?: Channel): string {\n    // TODO(#497): have different number format based on numberType (discrete/continuous)\n    return this.config('numberFormat');\n  };\n\n  public map(f: (fd: FieldDef, c: Channel, e: Encoding) => any) {\n    return vlEncoding.map(this._spec.encoding, f);\n  }\n\n  public reduce(f: (acc: any, fd: FieldDef, c: Channel, e: Encoding) => any, init) {\n    return vlEncoding.reduce(this._spec.encoding, f, init);\n  }\n\n  public forEach(f: (fd: FieldDef, c: Channel, i:number) => void) {\n    return vlEncoding.forEach(this._spec.encoding, f);\n  }\n\n  public isOrdinalScale(channel: Channel) {\n    const fieldDef = this.fieldDef(channel);\n    return fieldDef && (\n      contains([NOMINAL, ORDINAL], fieldDef.type) ||\n      (fieldDef.type === TEMPORAL && fieldDef.timeUnit &&\n        time.scale.type(fieldDef.timeUnit, channel) === 'ordinal')\n      );\n  }\n\n  public isDimension(channel: Channel) {\n    return this.has(channel) &&\n      vlFieldDef.isDimension(this.fieldDef(channel));\n  }\n\n  public isMeasure(channel: Channel) {\n    return this.has(channel) &&\n      vlFieldDef.isMeasure(this.fieldDef(channel));\n  }\n\n  public isAggregate() {\n    return vlEncoding.isAggregate(this._spec.encoding);\n  }\n\n  public isFacet() {\n    return this.has(ROW) || this.has(COLUMN);\n  }\n\n  public dataTable() {\n    return this.isAggregate() ? SUMMARY : SOURCE;\n  }\n\n  public data() {\n    return this._spec.data;\n  }\n\n  /** returns whether the encoding has values embedded */\n  public hasValues() {\n    var vals = this.data().values;\n    return vals && vals.length;\n  }\n\n  public config(name: string) {\n    return this._spec.config[name];\n  }\n\n  // FIXME -- move this to marks.ts\n  public markOpacity(): number {\n    const opacity = this.config('marks').opacity;\n    if (opacity) {\n      return opacity;\n    } else {\n      if (contains([POINT, TICK, CIRCLE, SQUARE], this.mark())) {\n        // point-based marks and bar\n        if (!this.isAggregate() || this.has(DETAIL)) {\n          return 0.7;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n",
    "import {Model} from './Model';\nimport {contains, extend, truncate} from '../util';\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\nimport {COLUMN, ROW, X, Y, Channel} from '../channel';\nimport * as time from './time';\n\n// https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#11-ambient-declarations\ndeclare var exports;\n\nexport function compileAxis(channel: Channel, model: Model) {\n  const isCol = channel === COLUMN,\n    isRow = channel === ROW,\n    type = isCol ? 'x' : isRow ? 'y': channel;\n\n  // TODO: rename def to axisDef and avoid side effects where possible.\n  // TODO: replace any with Vega Axis Interface\n  var def:any = {\n    type: type,\n    scale: channel\n  };\n\n  // 1. Add properties\n  [\n    // a) properties with special rules (so it has axis[property] methods) -- call rule functions\n    'format', 'grid', 'layer', 'orient', 'tickSize', 'ticks', 'title',\n    // b) properties without rules, only produce default values in the schema, or explicit value if specified\n    'offset', 'tickPadding', 'tickSize', 'tickSizeMajor', 'tickSizeMinor', 'tickSizeEnd',\n    'titleOffset', 'values', 'subdivide'\n  ].forEach(function(property) {\n    let method: (model: Model, channel: Channel, def:any)=>any;\n\n    var value = (method = exports[property]) ?\n                  // calling axis.format, axis.grid, ...\n                  method(model, channel, def) :\n                  model.fieldDef(channel).axis[property];\n    if (value !== undefined) {\n      def[property] = value;\n    }\n  });\n\n  // 2) Add mark property definition groups\n  var props = model.fieldDef(channel).axis.properties || {};\n\n  [\n    'axis', 'labels',// have special rules\n    'grid', 'title', 'ticks', 'majorTicks', 'minorTicks' // only default values\n  ].forEach(function(group) {\n    var value = properties[group] ?\n      properties[group](model, channel, props[group], def) :\n      props[group];\n    if (value !== undefined) {\n      def.properties = def.properties || {};\n      def.properties[group] = value;\n    }\n  });\n\n  return def;\n}\n\nexport function format(model: Model, channel: Channel) {\n  const fieldDef = model.fieldDef(channel);\n  var format = fieldDef.axis.format;\n  if (format !== undefined)  {\n    return format;\n  }\n\n  if (fieldDef.type === QUANTITATIVE) {\n    return model.numberFormat(channel);\n  } else if (fieldDef.type === TEMPORAL) {\n    const timeUnit = fieldDef.timeUnit;\n    if (!timeUnit) {\n      return model.config('timeFormat');\n    } else if (timeUnit === 'year') {\n      return 'd';\n    }\n  }\n  return undefined;\n}\n\nexport function grid(model: Model, channel: Channel) {\n  const fieldDef = model.fieldDef(channel);\n  var grid = fieldDef.axis.grid;\n  if (grid !== undefined) {\n    return grid;\n  }\n\n  // If `grid` is unspecified, the default value is `true` for ordinal scales\n  // that are not binned\n  return !model.isOrdinalScale(channel) && !fieldDef.bin;\n}\n\nexport function layer(model: Model, channel: Channel, def) {\n  var layer = model.fieldDef(channel).axis.layer;\n  if (layer !== undefined) {\n    return layer;\n  }\n  if (def.grid) {\n    // if grid is true, need to put layer on the back so that grid is behind marks\n    return 'back';\n  }\n  return undefined; // otherwise return undefined and use Vega's default.\n};\n\nexport function orient(model: Model, channel: Channel) {\n  var orient = model.fieldDef(channel).axis.orient;\n  if (orient) {\n    return orient;\n  } else if (channel === COLUMN) {\n    // FIXME test and decide\n    return 'top';\n  } else if (channel === ROW) {\n    if (model.has(Y) && model.fieldDef(Y).axis.orient !== 'right') {\n      return 'right';\n    }\n  }\n  return undefined;\n}\n\nexport function ticks(model: Model, channel: Channel) {\n  const ticks = model.fieldDef(channel).axis.ticks;\n  if (ticks !== undefined) {\n    return ticks;\n  }\n\n  // FIXME depends on scale type too\n  if (channel === X && !model.fieldDef(channel).bin) {\n    return 5;\n  }\n\n  return undefined;\n}\n\nexport function tickSize(model: Model, channel: Channel) {\n  const tickSize = model.fieldDef(channel).axis.tickSize;\n  if (tickSize !== undefined) {\n    return tickSize;\n  }\n  if (channel === ROW || channel === COLUMN) {\n    return 0;\n  }\n  return undefined;\n}\n\n\nexport function title(model: Model, channel: Channel) {\n  var axisSpec = model.fieldDef(channel).axis;\n  if (axisSpec.title !== undefined) {\n    return axisSpec.title;\n  }\n\n  // if not defined, automatically determine axis title from field def\n  var fieldTitle = model.fieldTitle(channel);\n  const layout = model.layout();\n\n  var maxLength;\n  if (axisSpec.titleMaxLength) {\n    maxLength = axisSpec.titleMaxLength;\n  } else if (channel === X && typeof layout.cellWidth === 'number') {\n    // Guess max length if we know cell size at compile time\n    maxLength = layout.cellWidth / model.config('characterWidth');\n  } else if (channel === Y && typeof layout.cellHeight === 'number') {\n    // Guess max length if we know cell size at compile time\n    maxLength = layout.cellHeight / model.config('characterWidth');\n  }\n  // FIXME: we should use template to truncate instead\n  return maxLength ? truncate(fieldTitle, maxLength) : fieldTitle;\n}\n\nnamespace properties {\n  export function axis(model: Model, channel: Channel, spec) {\n    if (channel === ROW || channel === COLUMN) {\n      // hide axis for facets\n      return extend({\n        opacity: {value: 0}\n      }, spec || {});\n    }\n    return spec || undefined;\n  }\n\n  export function labels(model: Model, channel: Channel, spec, def) {\n    let fieldDef = model.fieldDef(channel);\n    var filterName = time.labelTemplate(fieldDef.timeUnit, fieldDef.axis.shortTimeNames);\n    if (fieldDef.type === TEMPORAL && filterName) {\n      spec = extend({\n        text: {template: '{{datum.data | ' + filterName + '}}'}\n      }, spec || {});\n    }\n\n    if (contains([NOMINAL, ORDINAL], fieldDef.type) && fieldDef.axis.labelMaxLength) {\n      // TODO replace this with Vega's labelMaxLength once it is introduced\n      spec = extend({\n        text: {\n          template: '{{ datum.data | truncate:' + fieldDef.axis.labelMaxLength + '}}'\n        }\n      }, spec || {});\n    }\n\n     // for x-axis, set ticks for Q or rotate scale for ordinal scale\n    switch (channel) {\n      case X:\n        if (model.isDimension(X) || fieldDef.type === TEMPORAL) {\n          spec = extend({\n            angle: {value: 270},\n            align: {value: def.orient === 'top' ? 'left': 'right'},\n            baseline: {value: 'middle'}\n          }, spec || {});\n        }\n        break;\n      case ROW:\n        if (def.orient === 'right') {\n          spec = extend({\n            angle: {value: 90},\n            align: {value: 'center'},\n            baseline: {value: 'bottom'}\n          }, spec || {});\n        }\n    }\n\n    return spec || undefined;\n  }\n}\n",
    "/**\n * Module for compiling Vega-lite spec into Vega spec.\n */\nimport {Model} from './Model';\n\nimport {compileAxis} from './axis';\nimport {compileData} from './data';\nimport {facetMixins} from './facet';\nimport {compileLegends} from './legend';\nimport {compileMarks} from './marks';\nimport {compileScales} from './scale';\nimport {extend} from '../util';\n\nimport {LAYOUT} from '../data';\nimport {COLUMN, ROW, X, Y, Channel} from '../channel';\n\nexport {Model} from './Model';\n\nexport function compile(spec, theme?) {\n  var model = new Model(spec, theme);\n  const layout = model.layout();\n\n  let rootGroup:any = extend({\n      name: spec.name ? spec.name + '_root' : 'root',\n      type: 'group',\n    },\n    spec.description ? {description: spec.description} : {},\n    {\n      from: {data: LAYOUT},\n      properties: {\n        update: {\n          width: layout.width.field ?\n                 {field: layout.width.field} :\n                 {value: layout.width},\n          height: layout.height.field ?\n                  {field: layout.height.field} :\n                  {value: layout.height}\n        }\n      }\n    });\n\n  const marks = compileMarks(model);\n\n  // Small Multiples\n  if (model.has(ROW) || model.has(COLUMN)) {\n    // put the marks inside a facet cell's group\n    extend(rootGroup, facetMixins(model, marks));\n  } else {\n    rootGroup.marks = marks.map(function(mark) {\n      mark.from = mark.from || {};\n      mark.from.data = model.dataTable();\n      return mark;\n    });\n    const scaleNames = model.map(function(_, channel: Channel){\n        return channel; // TODO model.scaleName(channel)\n      });\n    rootGroup.scales = compileScales(scaleNames, model);\n\n    var axes = (model.has(X) ? [compileAxis(X, model)] : [])\n      .concat(model.has(Y) ? [compileAxis(Y, model)] : []);\n    if (axes.length > 0) {\n      rootGroup.axes = axes;\n    }\n  }\n\n  // legends (similar for either facets or non-facets\n  var legends = compileLegends(model);\n  if (legends.length > 0) {\n    rootGroup.legends = legends;\n  }\n\n  // FIXME replace FIT with appropriate mechanism once Vega has it\n  const FIT = 1;\n\n  // TODO: change type to become VgSpec\n  var output = extend(\n    spec.name ? {name: spec.name} : {},\n    {\n      width: layout.width.field ? FIT : layout.width,\n      height: layout.height.field ? FIT : layout.height,\n      padding: 'auto'\n    },\n    ['viewport', 'background', 'scene'].reduce(function(topLevelConfig, property) {\n      const value = model.config(property);\n      if (value !== undefined) {\n        topLevelConfig[property] = value;\n      }\n      return topLevelConfig;\n    }, {}),\n    {\n      data: compileData(model),\n      marks: [rootGroup]\n    });\n\n  return {\n    spec: output\n    // TODO: add warning / errors here\n  };\n}\n",
    "import * as vlFieldDef from '../fielddef';\nimport {extend, keys, vals, reduce} from '../util';\nimport {Model} from './Model';\nimport {FieldDef} from '../schema/fielddef.schema';\nimport {StackProperties} from './stack';\n\nimport {autoMaxBins} from '../bin';\nimport {Channel, X, Y, ROW, COLUMN} from '../channel';\nimport {SOURCE, STACKED, LAYOUT, SUMMARY} from '../data';\nimport * as time from './time';\nimport {QUANTITATIVE, TEMPORAL} from '../type';\n\n\n/**\n * Create Vega's data array from a given encoding.\n *\n * @param  encoding\n * @return Array of Vega data.\n *                 This always includes a \"source\" data table.\n *                 If the encoding contains aggregate value, this will also create\n *                 aggregate table as well.\n */\nexport function compileData(model: Model): VgData[] {\n  var def = [source.def(model)];\n\n  const summaryDef = summary.def(model);\n  if (summaryDef) {\n    def.push(summaryDef);\n  }\n\n  // TODO add \"having\" filter here\n\n  // append non-positive filter at the end for the data table\n  filterNonPositiveForLog(def[def.length - 1], model);\n\n  // add stats for layout calculation\n  const statsDef = layout.def(model);\n  if(statsDef) {\n    def.push(statsDef);\n  }\n\n  // Stack\n  const stackDef = model.stack();\n  if (stackDef) {\n    def.push(stack.def(model, stackDef));\n  }\n\n  return def;\n}\n\n// TODO: Consolidate all Vega interface\ninterface VgData {\n  name: string;\n  source?: string;\n  values?: any;\n  format?: any;\n  url?: any;\n  transform?: any;\n}\n\nexport namespace source {\n  export function def(model: Model): VgData {\n    var source:VgData = {name: SOURCE};\n\n    // Data source (url or inline)\n    if (model.hasValues()) {\n      source.values = model.data().values;\n      source.format = {type: 'json'};\n    } else {\n      source.url = model.data().url;\n      source.format = {type: model.data().formatType};\n    }\n\n    // Set data's format.parse if needed\n    var parse = formatParse(model);\n    if (parse) {\n      source.format.parse = parse;\n    }\n\n    source.transform = transform(model);\n    return source;\n  }\n\n  function formatParse(model: Model) {\n    const calcFieldMap = (model.data().calculate || []).reduce(function(fieldMap, formula) {\n      fieldMap[formula.field] = true;\n      return fieldMap;\n    }, {});\n\n    let parse;\n    // use forEach rather than reduce so that it can return undefined\n    // if there is no parse needed\n    model.forEach(function(fieldDef: FieldDef) {\n      if (fieldDef.type === TEMPORAL) {\n        parse = parse || {};\n        parse[fieldDef.field] = 'date';\n      } else if (fieldDef.type === QUANTITATIVE) {\n        if (vlFieldDef.isCount(fieldDef) || calcFieldMap[fieldDef.field]) {\n          return;\n        }\n        parse = parse || {};\n        parse[fieldDef.field] = 'number';\n      }\n    });\n    return parse;\n  }\n\n  /**\n   * Generate Vega transforms for the source data table.  This can include\n   * transforms for time unit, binning and filtering.\n   */\n  export function transform(model: Model) {\n    // null filter comes first so transforms are not performed on null values\n    // time and bin should come before filter so we can filter by time and bin\n    return nullFilterTransform(model).concat(\n      formulaTransform(model),\n      timeTransform(model),\n      binTransform(model),\n      filterTransform(model)\n    );\n  }\n\n  export function timeTransform(model: Model) {\n    return model.reduce(function(transform, fieldDef: FieldDef, channel: Channel) {\n      if (fieldDef.type === TEMPORAL && fieldDef.timeUnit) {\n        var field = model.field(channel, {nofn: true, datum: true});\n\n        transform.push({\n          type: 'formula',\n          field: model.field(channel),\n          expr: time.formula(fieldDef.timeUnit, field)\n        });\n      }\n      return transform;\n    }, []);\n  }\n\n  export function binTransform(model: Model) {\n    return model.reduce(function(transform, fieldDef: FieldDef, channel: Channel) {\n      const bin = model.fieldDef(channel).bin;\n      if (bin) {\n        let binTrans = extend({\n            type: 'bin',\n            field: fieldDef.field,\n            output: {\n              start: model.field(channel, {binSuffix: '_start'}),\n              mid: model.field(channel, {binSuffix: '_mid'}),\n              end: model.field(channel, {binSuffix: '_end'})\n            }\n          },\n          // if bin is an object, load parameter here!\n          typeof bin === 'boolean' ? {} : bin\n        );\n\n        if (!binTrans.maxbins && !binTrans.step) {\n          // if both maxbins and step are specified, need to automatically determine bin\n          binTrans.maxbins = autoMaxBins(channel);\n        }\n\n        transform.push(binTrans);\n      }\n      return transform;\n    }, []);\n  }\n\n  /**\n   * @return An array that might contain a filter transform for filtering null value based on filterNul config\n   */\n  export function nullFilterTransform(model: Model) {\n    const filterNull = model.config('filterNull');\n    const filteredFields = keys(model.reduce(function(aggregator, fieldDef: FieldDef) {\n      if (fieldDef.field && fieldDef.field !== '*' && filterNull[fieldDef.type]) {\n        aggregator[fieldDef.field] = true;\n      }\n      return aggregator;\n    }, {}));\n\n    return filteredFields.length > 0 ?\n      [{\n        type: 'filter',\n        test: filteredFields.map(function(fieldName) {\n          return 'datum.' + fieldName + '!==null';\n        }).join(' && ')\n      }] : [];\n  }\n\n  export function filterTransform(model: Model) {\n    var filter = model.data().filter;\n    return filter ? [{\n        type: 'filter',\n        test: filter\n    }] : [];\n  }\n\n  export function formulaTransform(model: Model) {\n    return (model.data().calculate || []).reduce(function(transform, formula) {\n      transform.push(extend({type: 'formula'}, formula));\n      return transform;\n    }, []);\n  }\n}\n\nexport namespace layout {\n\n  export function def(model: Model): VgData {\n    let summarize = [];\n    let formulas = [];\n\n    // TODO: handle \"fit\" mode\n    if (model.has(X) && model.isOrdinalScale(X)) {\n      const xScale = model.fieldDef(X).scale;\n      const xHasDomain = xScale.domain instanceof Array;\n      if (!xHasDomain) {\n        summarize.push({\n          field: model.field(X),\n          ops: ['distinct']\n        });\n      }\n      const xCardinality = xHasDomain ? xScale.domain.length :\n                             model.field(X, {datum: true, prefn: 'distinct_'});\n      formulas.push({\n        type: 'formula',\n        field: 'cellWidth',\n        expr: '(' + xCardinality + ' + ' + xScale.padding + ') * ' + xScale.bandWidth\n      });\n    }\n\n    if (model.has(Y) && model.isOrdinalScale(Y)) {\n      const yScale = model.fieldDef(Y).scale;\n      const yHasDomain = yScale.domain instanceof Array;\n\n      if (!yHasDomain) {\n        summarize.push({\n          field: model.field(Y),\n          ops: ['distinct']\n        });\n      }\n\n      const yCardinality = yHasDomain ? yScale.domain.length :\n                             model.field(Y, {datum: true, prefn: 'distinct_'});\n      formulas.push({\n        type: 'formula',\n        field: 'cellHeight',\n        expr: '(' + yCardinality + ' + ' + yScale.padding + ') * ' + yScale.bandWidth\n      });\n    }\n\n    const cellPadding = model.config('cell').padding;\n    const layout = model.layout();\n\n    if (model.has(COLUMN)) {\n      const cellWidth = layout.cellWidth.field ?\n                        'datum.' + layout.cellWidth.field :\n                        layout.cellWidth;\n      const colScale = model.fieldDef(COLUMN).scale;\n      const colHasDomain = colScale.domain instanceof Array;\n      if (!colHasDomain) {\n        summarize.push({\n          field: model.field(COLUMN),\n          ops: ['distinct']\n        });\n      }\n\n      const colCardinality = colHasDomain ? colScale.domain.length :\n                               model.field(COLUMN, {datum: true, prefn: 'distinct_'});\n      formulas.push({\n        type: 'formula',\n        field: 'width',\n        expr: cellWidth + ' * ' + colCardinality + ' + ' +\n              '(' + colCardinality + ' - 1) * ' + cellPadding\n      });\n    }\n\n    if (model.has(ROW)) {\n      const cellHeight = layout.cellHeight.field ?\n                        'datum.' + layout.cellHeight.field :\n                        layout.cellHeight;\n      const rowScale = model.fieldDef(ROW).scale;\n      const rowHasDomain = rowScale.domain instanceof Array;\n      if (!rowHasDomain) {\n        summarize.push({\n          field: model.field(ROW),\n          ops: ['distinct']\n        });\n      }\n\n      const rowCardinality = rowHasDomain ? rowScale.domain.length :\n                               model.field(ROW, {datum: true, prefn: 'distinct_'});\n      formulas.push({\n        type: 'formula',\n        field: 'height',\n        expr: cellHeight + ' * ' + rowCardinality + ' + ' +\n              '(' +rowCardinality + ' - 1) * ' + cellPadding\n      });\n    }\n\n    if (formulas.length > 0) {\n      return summarize.length > 0 ? {\n        name: LAYOUT,\n        source: model.dataTable(),\n        transform: [{\n            type: 'aggregate',\n            summarize: summarize\n          }].concat(formulas)\n      } : {\n        name: LAYOUT,\n        values: [{}],\n        transform: formulas\n      };\n    }\n    return null;\n  }\n}\n\nexport namespace summary {\n  export function def(model: Model):VgData {\n    /* dict set for dimensions */\n    var dims = {};\n\n    /* dictionary mapping field name => dict set of aggregation functions */\n    var meas = {};\n\n    var hasAggregate = false;\n\n    model.forEach(function(fieldDef, channel: Channel) {\n      if (fieldDef.aggregate) {\n        hasAggregate = true;\n        if (fieldDef.aggregate === 'count') {\n          meas['*'] = meas['*'] || {};\n          meas['*'].count = true;\n        } else {\n          meas[fieldDef.field] = meas[fieldDef.field] || {};\n          meas[fieldDef.field][fieldDef.aggregate] = true;\n        }\n      } else {\n        if (fieldDef.bin) {\n          // TODO(#694) only add dimension for the required ones.\n          dims[model.field(channel, {binSuffix: '_start'})] = model.field(channel, {binSuffix: '_start'});\n          dims[model.field(channel, {binSuffix: '_mid'})] = model.field(channel, {binSuffix: '_mid'});\n          dims[model.field(channel, {binSuffix: '_end'})] = model.field(channel, {binSuffix: '_end'});\n        } else {\n          dims[fieldDef.field] = model.field(channel);\n        }\n\n      }\n    });\n\n    var groupby = vals(dims);\n\n    // short-format summarize object for Vega's aggregate transform\n    // https://github.com/vega/vega/wiki/Data-Transforms#-aggregate\n    var summarize = reduce(meas, function(aggregator, fnDictSet, field) {\n      aggregator[field] = keys(fnDictSet);\n      return aggregator;\n    }, {});\n\n    if (hasAggregate) {\n      return {\n        name: SUMMARY,\n        source: SOURCE,\n        transform: [{\n          type: 'aggregate',\n          groupby: groupby,\n          summarize: summarize\n        }]\n      };\n    }\n\n    return null;\n  };\n}\n\nexport namespace stack {\n  /**\n   * Add stacked data source, for feeding the shared scale.\n   */\n  export function def(model: Model, stackProps: StackProperties):VgData {\n    var groupbyChannel = stackProps.groupbyChannel;\n    var fieldChannel = stackProps.fieldChannel;\n    var facetFields = (model.has(COLUMN) ? [model.field(COLUMN)] : [])\n                      .concat((model.has(ROW) ? [model.field(ROW)] : []));\n\n    var stacked:VgData = {\n      name: STACKED,\n      source: model.dataTable(),\n      transform: [{\n        type: 'aggregate',\n        // group by channel and other facets\n        groupby: [model.field(groupbyChannel)].concat(facetFields),\n        summarize: [{ops: ['sum'], field: model.field(fieldChannel)}]\n      }]\n    };\n\n    if (facetFields && facetFields.length > 0) {\n      stacked.transform.push({ // calculate max for each facet\n        type: 'aggregate',\n        groupby: facetFields,\n        summarize: [{\n          ops: ['max'],\n          // we want max of sum from above transform\n          field: model.field(fieldChannel, {prefn: 'sum_'})\n        }]\n      });\n    }\n    return stacked;\n  };\n}\n\nexport function filterNonPositiveForLog(dataTable, model: Model) {\n  model.forEach(function(_, channel) {\n    if (model.fieldDef(channel).scale.type === 'log') {\n      dataTable.transform.push({\n        type: 'filter',\n        test: model.field(channel, {datum: true}) + ' > 0'\n      });\n    }\n  });\n}\n",
    "import * as util from '../util';\nimport {COLUMN, ROW, X, Y, Channel} from '../channel';\nimport {Model} from './Model';\n\nimport {compileAxis} from './axis';\nimport {compileScales} from './scale';\n\n/**\n * return mixins that contains marks, scales, and axes for the rootGroup\n */\nexport function facetMixins(model: Model, marks) {\n  const layout = model.layout();\n\n  const cellWidth: any = !model.has(COLUMN) ?\n      {field: {group: 'width'}} :     // cellWidth = width -- just use group's\n    layout.cellWidth.field ?\n      {scale: 'column', band: true} : // bandSize of the scale\n      {value: layout.cellWidth};      // static value\n\n  const cellHeight: any = !model.has(ROW) ?\n      {field: {group: 'height'}} :  // cellHeight = height -- just use group's\n    layout.cellHeight.field ?\n      {scale: 'row', band: true} :  // bandSize of the scale\n      {value: layout.cellHeight};   // static value\n\n  let facetGroupProperties: any = {\n    width: cellWidth,\n    height: cellHeight\n  };\n\n  // add configs that are the resulting group marks properties\n  const cellConfig = model.config('cell');\n  ['fill', 'fillOpacity', 'stroke', 'strokeWidth',\n    'strokeOpacity', 'strokeDash', 'strokeDashOffset']\n    .forEach(function(property) {\n      const value = cellConfig[property];\n      if (value !== undefined) {\n        facetGroupProperties[property] = value;\n      }\n    });\n\n  let rootMarks = [], rootAxes = [], facetKeys = [], cellAxes = [];\n  const hasRow = model.has(ROW), hasCol = model.has(COLUMN);\n\n  // TODO(#90): add property to keep axes in cells even if row is encoded\n  if (hasRow) {\n    if (!model.isDimension(ROW)) {\n      // TODO: add error to model instead\n      util.error('Row encoding should be ordinal.');\n    }\n    facetGroupProperties.y = {\n      scale: ROW,\n      field: model.field(ROW)\n    };\n\n    facetKeys.push(model.field(ROW));\n    rootAxes.push(compileAxis(ROW, model));\n    if (model.has(X)) {\n      // If has X, prepend a group for shared x-axes in the root group's marks\n      rootMarks.push(getXAxesGroup(model, cellWidth, hasCol));\n    }\n\n    // TODO: add properties to make rule optional\n    rootMarks.push(getRowRulesGroup(model, cellHeight));\n  } else { // doesn't have row\n    if (model.has(X)) { // keep x axis in the cell\n      cellAxes.push(compileAxis(X, model));\n    }\n  }\n\n  // TODO(#90): add property to keep axes in cells even if column is encoded\n  if (hasCol) {\n    if (!model.isDimension(COLUMN)) {\n      // TODO: add error to model instead\n      util.error('Col encoding should be ordinal.');\n    }\n    facetGroupProperties.x = {\n      scale: COLUMN,\n      field: model.field(COLUMN)\n    };\n\n    facetKeys.push(model.field(COLUMN));\n    rootAxes.push(compileAxis(COLUMN, model));\n\n    if (model.has(Y)) {\n      // If has Y, prepend a group for shared y-axes in the root group's marks\n      rootMarks.push(getYAxesGroup(model, cellHeight, hasRow));\n    }\n    // TODO: add properties to make rule optional\n    rootMarks.push(getColumnRulesGroup(model, cellWidth));\n  } else { // doesn't have column\n    if (model.has(Y)) { // keep y axis in the cell\n      cellAxes.push(compileAxis(Y, model));\n    }\n  }\n\n  let facetGroup: any = {\n    name: 'cell', // FIXME model.name() + cell\n    type: 'group',\n    from: {\n      data: model.dataTable(),\n      transform: [{type: 'facet', groupby: facetKeys}]\n    },\n    properties: {\n      update: facetGroupProperties\n    },\n    marks: marks\n  };\n  if (cellAxes.length > 0) {\n    facetGroup.axes = cellAxes;\n  }\n  rootMarks.push(facetGroup);\n\n  const scaleNames = model.map(function(_, channel: Channel){\n    return channel; // TODO model.scaleName(channel)\n  });\n\n  return {\n    marks: rootMarks,\n    axes: rootAxes,\n    // assuming equal cellWidth here\n    scales: compileScales(scaleNames, model)\n  };\n}\n\nfunction getXAxesGroup(model: Model, cellWidth, hasCol: boolean) {\n  let xAxesGroup: any = { // TODO: VgMarks\n    name: 'x-axes',\n    type: 'group',\n    properties: {\n      update: {\n        width: cellWidth,\n        height: {field: {group: 'height'}},\n        x: hasCol ? {scale: COLUMN, field: model.field(COLUMN)} : {value: 0},\n        y: {value: - model.config('cell').padding / 2}\n      }\n    },\n    axes: [compileAxis(X, model)]\n  };\n  if (hasCol) {\n    // FIXME facet is too expensive here - we only need to know unique columns\n    xAxesGroup.from = {\n      data: model.dataTable(),\n      transform: {type: 'facet', groupby: [model.field(COLUMN)]}\n    };\n  }\n  return xAxesGroup;\n}\n\nfunction getYAxesGroup(model: Model, cellHeight, hasRow: boolean) {\n  let yAxesGroup: any = { // TODO: VgMarks\n    name: 'y-axes',\n    type: 'group',\n    properties: {\n      update: {\n        width: {field: {group: 'width'}},\n        height: cellHeight,\n        x: {value: - model.config('cell').padding / 2},\n        y: hasRow ? {scale: ROW, field: model.field(ROW)} : {value: 0}\n      }\n    },\n    axes: [compileAxis(Y, model)]\n  };\n\n  if (hasRow) {\n    // FIXME facet is too expensive here - we only need to know unique rows\n    yAxesGroup.from = {\n      data: model.dataTable(),\n      transform: {type: 'facet', groupby: [model.field(ROW)]}\n    };\n  }\n  return yAxesGroup;\n}\n\nfunction getRowRulesGroup(model: Model, cellHeight): any { // TODO: VgMarks\n  const rowRulesOnTop = !model.has(X) || model.fieldDef(X).axis.orient !== 'top';\n  const offset = model.config('cell').padding / 2 - 1;\n  const rowRules = {\n    name: 'row-rules',\n    type: 'rule',\n    from: {\n      data: model.dataTable(),\n      transform: [{type: 'facet', groupby: [model.field(ROW)]}]\n    },\n    properties: {\n      update: {\n        y: {\n          scale: 'row',\n          field: model.field(ROW),\n          offset: (rowRulesOnTop ? -1 : 1) * offset\n        },\n        x: {value: 0, offset: -model.config('cell').gridOffset},\n        x2: {field: {group: 'width'}, offset: model.config('cell').gridOffset},\n        stroke: { value: model.config('cell').gridColor },\n        strokeOpacity: { value: model.config('cell').gridOpacity }\n      }\n    }\n  };\n\n  if (rowRulesOnTop) { // on top - no need to add offset\n    return rowRules;\n  } // otherwise, need to offset all rules by cellHeight\n  return {\n    name: 'row-rules-group',\n    type: 'group',\n    properties: {\n      update: {\n        // add offset to avoid clashing with axis\n        y: cellHeight.value ?\n          // If cellHeight contains value, just use it.\n          cellHeight :\n          // Otherwise, need to get it from layout data in the root group\n          {field: {parent: 'cellHeight'}},\n\n        // include width so it can be referred inside row-rules\n        width: {field: {group: 'width'}}\n      }\n    },\n    marks: [rowRules]\n  };\n}\n\nfunction getColumnRulesGroup(model: Model, cellWidth): any { // TODO: VgMarks\n  const colRulesOnLeft = !model.has(Y) || model.fieldDef(Y).axis.orient === 'right';\n  const offset = model.config('cell').padding / 2 - 1;\n  const columnRules = {\n    name: 'column-rules',\n    type: 'rule',\n    from: {\n      data: model.dataTable(),\n      transform: [{type: 'facet', groupby: [model.field(COLUMN)]}]\n    },\n    properties: {\n      update: {\n        x: {\n          scale: 'column',\n          field: model.field(COLUMN),\n          offset: (colRulesOnLeft ? -1 : 1) * offset\n        },\n        y: {value: 0, offset: -model.config('cell').gridOffset},\n        y2: {field: {group: 'height'}, offset: model.config('cell').gridOffset},\n        stroke: { value: model.config('cell').gridColor },\n        strokeOpacity: { value: model.config('cell').gridOpacity }\n      }\n    }\n  };\n\n  if (colRulesOnLeft) { // on left, no need to add global offset\n    return columnRules;\n  } // otherwise, need to offset all rules by cellWidth\n  return {\n    name: 'column-rules-group',\n    type: 'group',\n    properties: {\n      update: {\n        // Add offset to avoid clashing with axis\n        x: cellWidth.value ?\n           // If cellWidth contains value, just use it.\n           cellWidth :\n           // Otherwise, need to get it from layout data in the root group\n           {field: {parent: 'cellWidth'}},\n\n        // include height so it can be referred inside column-rules\n        height: {field: {group: 'height'}}\n      }\n    },\n    marks: [columnRules]\n  };\n}\n",
    "import {Model} from './Model';\n\nimport {COLUMN, ROW, X, Y, TEXT} from '../channel';\nimport {TEXT as TEXT_MARK} from '../mark';\nimport {LAYOUT} from '../data';\n\ninterface DataRef {\n  data?: string;\n  field?: string;\n  value?: string;\n}\n\n// value that we can put in scale's domain/range (either a number, or a data ref)\ntype LayoutValue = number | DataRef;\n\nexport function compileLayout(model: Model): {[layoutProp: string]: LayoutValue} {\n  const cellWidth = getCellWidth(model);\n  const cellHeight = getCellHeight(model);\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    // width and height of the chart\n    width: getWidth(model, cellWidth),\n    height: getHeight(model, cellHeight)\n  };\n}\n\nfunction getCellWidth(model: Model): LayoutValue {\n  if (model.has(X)) {\n    if (model.isOrdinalScale(X)) { // calculate in data\n      return {data: LAYOUT, field: 'cellWidth'};\n    }\n    return model.config('cell').width;\n  }\n  if (model.mark() === TEXT_MARK) {\n    return model.config('textCellWidth');\n  }\n  return model.fieldDef(X).scale.bandWidth;\n}\n\nfunction getWidth(model: Model, cellWidth: LayoutValue): LayoutValue {\n  if (model.has(COLUMN)) { // calculate in data\n    return {data: LAYOUT, field: 'width'};\n  }\n  return cellWidth;\n}\n\nfunction getCellHeight(model: Model): LayoutValue {\n  if (model.has(Y)) {\n    if (model.isOrdinalScale(Y)) { // calculate in data\n      return {data: LAYOUT, field: 'cellHeight'};\n    } else {\n      return model.config('cell').height;\n    }\n  }\n  return model.fieldDef(Y).scale.bandWidth;\n}\n\nfunction getHeight(model: Model, cellHeight: LayoutValue): LayoutValue {\n  if (model.has(ROW)) {\n    return {data: LAYOUT, field: 'height'};\n  }\n  return cellHeight;\n}\n",
    "import {extend, keys} from '../util';\nimport {COLOR, SIZE, SHAPE, Channel} from '../channel';\nimport {Model} from './Model';\nimport * as time from './time';\nimport {TEMPORAL} from '../type';\nimport {AREA, BAR, TICK, TEXT, LINE, POINT, CIRCLE, SQUARE} from '../mark';\n\nexport function compileLegends(model: Model) {\n  var defs = [];\n\n  if (model.has(COLOR) && model.fieldDef(COLOR).legend) {\n    defs.push(compileLegend(model, COLOR, {\n      fill: COLOR\n      // TODO: consider if this should be stroke for line\n    }));\n  }\n\n  if (model.has(SIZE) && model.fieldDef(SIZE).legend) {\n    defs.push(compileLegend(model, SIZE, {\n      size: SIZE\n    }));\n  }\n\n  if (model.has(SHAPE) && model.fieldDef(SHAPE).legend) {\n    defs.push(compileLegend(model, SHAPE, {\n      shape: SHAPE\n    }));\n  }\n  return defs;\n}\n\nexport function compileLegend(model: Model, channel: Channel, def) {\n  const legend = model.fieldDef(channel).legend;\n\n  // 1.1 Add properties with special rules\n  def.title = title(model, channel);\n\n  // 1.2 Add properties without rules\n  ['orient', 'format', 'values'].forEach(function(property) {\n    const value = legend[property];\n    if (value !== undefined) {\n      def[property] = value;\n    }\n  });\n\n  // 2) Add mark property definition groups\n  const props = (typeof legend !== 'boolean' && legend.properties) || {};\n  ['title', 'labels', 'symbols', 'legend'].forEach(function(group) {\n    let value = properties[group] ?\n      properties[group](model, channel, props[group]) : // apply rule\n      props[group]; // no rule -- just default values\n    if (value !== undefined) {\n      def.properties = def.properties || {};\n      def.properties[group] = value;\n    }\n  });\n\n  return def;\n}\n\nexport function title(model: Model, channel: Channel) {\n  const legend = model.fieldDef(channel).legend;\n\n  if (typeof legend !== 'boolean' && legend.title) {\n    return legend.title;\n  }\n\n  return model.fieldTitle(channel);\n}\n\nnamespace properties {\n  export function labels(model: Model, channel: Channel, spec) {\n    var fieldDef = model.fieldDef(channel);\n    var timeUnit = fieldDef.timeUnit;\n    if (fieldDef.type === TEMPORAL && timeUnit && time.labelTemplate(timeUnit)) {\n      return extend({\n        text: {\n          template: '{{datum.data | ' + time.labelTemplate(timeUnit) + '}}'\n        }\n      }, spec || {});\n    }\n    return spec;\n  }\n\n  export function symbols(model: Model, channel: Channel, spec) {\n    let symbols:any = {};\n    const mark = model.mark();\n\n    switch (mark) {\n      case BAR:\n      case TICK:\n      case TEXT:\n        symbols.stroke = {value: 'transparent'};\n        symbols.shape = {value: 'square'};\n        break;\n\n      case CIRCLE:\n      case SQUARE:\n        symbols.shape = {value: mark};\n        /* fall through */\n      case POINT:\n        // fill or stroke\n        if (model.config('marks').filled) {\n          if (model.has(COLOR) && channel === COLOR) {\n            symbols.fill = {scale: COLOR, field: 'data'};\n          } else {\n            symbols.fill = {value: model.fieldDef(COLOR).value};\n          }\n          symbols.stroke = {value: 'transparent'};\n        } else {\n          if (model.has(COLOR) && channel === COLOR) {\n            symbols.stroke = {scale: COLOR, field: 'data'};\n          } else {\n            symbols.stroke = {value: model.fieldDef(COLOR).value};\n          }\n          symbols.fill = {value: 'transparent'};\n          symbols.strokeWidth = {value: model.config('marks').strokeWidth};\n        }\n\n        break;\n      case LINE:\n      case AREA:\n        // TODO use shape here after implementing #508\n        break;\n    }\n\n    var opacity = model.markOpacity();\n    if (opacity) { symbols.opacity = {value: opacity}; }\n\n    symbols = extend(symbols, spec || {});\n\n    return keys(symbols).length > 0 ? symbols : undefined;\n  }\n}\n",
    "import {Model} from './Model';\nimport {X, Y, COLOR, TEXT, SIZE, SHAPE, DETAIL} from '../channel';\nimport {AREA, BAR, LINE, TEXT as TEXTMARKS} from '../mark';\nimport {QUANTITATIVE} from '../type';\nimport {imputeTransform, stackTransform} from './stack';\n\n/* mapping from vega-lite's mark types to vega's mark types */\nconst MARKTYPES_MAP = {\n  bar: 'rect',\n  tick: 'rect',\n  point: 'symbol',\n  line: 'line',\n  area: 'area',\n  text: 'text',\n  circle: 'symbol',\n  square: 'symbol'\n};\n\nexport function compileMarks(model: Model): any[] {\n  const mark = model.mark();\n  if (mark === LINE || mark === AREA) {\n    // For Line and Area, we sort values based on dimension by default\n    // For line, a special config \"sortLineBy\" is allowed\n    let sortBy = mark === LINE ? model.config('sortLineBy') : undefined;\n    if (!sortBy) {\n      const sortField = (model.isMeasure(X) && model.isDimension(Y)) ? Y : X;\n      sortBy = '-' + model.field(sortField);\n    }\n\n    let pathMarks: any = {\n      type: MARKTYPES_MAP[mark],\n      from: {\n        // from.data might be added later for non-facet, single group line/area\n        transform: [{ type: 'sort', by: sortBy }]\n      },\n      properties: {\n        update: properties[mark](model)\n      }\n    };\n\n    // FIXME is there a case where area requires impute without stacking?\n\n    const details = detailFields(model);\n    if (details.length > 0) { // have level of details - need to facet line into subgroups\n      const facetTransform = { type: 'facet', groupby: details };\n      const transform = mark === AREA && model.stack() ?\n        // For stacked area, we need to impute missing tuples and stack values\n        [imputeTransform(model), stackTransform(model), facetTransform] :\n        [facetTransform];\n\n      return [{\n        name: mark + '-facet',\n        type: 'group',\n        from: {\n          // from.data might be added later for non-facet charts\n          transform: transform\n        },\n        properties: {\n          update: {\n            width: { field: { group: 'width' } },\n            height: { field: { group: 'height' } }\n          }\n        },\n        marks: [pathMarks]\n      }];\n    } else {\n      return [pathMarks];\n    }\n  } else { // other mark type\n    let marks = []; // TODO: vgMarks\n    if (mark === TEXTMARKS && model.has(COLOR)) {\n      // add background to 'text' marks if has color\n      marks.push({\n        type: 'rect',\n        properties: { update: properties.textBackground(model) }\n      });\n    }\n\n    let mainDef: any = {\n      // TODO add name\n      type: MARKTYPES_MAP[mark],\n      properties: {\n        update: properties[mark](model)\n      }\n    };\n    const stack = model.stack();\n    if (mark === BAR && stack) {\n      mainDef.from = {\n        transform: [stackTransform(model)]\n      };\n    }\n    marks.push(mainDef);\n\n    // if (model.has(LABEL)) {\n    //   // TODO: add label by type here\n    // }\n\n    return marks;\n  }\n}\n\n\n\nfunction applyMarksConfig(marksProperties, marksConfig, propsList) {\n  propsList.forEach(function(property) {\n    const value = marksConfig[property];\n    if (value !== undefined) {\n      marksProperties[property] = { value: value };\n    }\n  });\n}\n\n/**\n * Returns list of detail fields (for 'color', 'shape', or 'detail' channels)\n * that the model's spec contains.\n */\nfunction detailFields(model: Model): string[] {\n  return [COLOR, DETAIL, SHAPE].reduce(function(details, channel) {\n    if (model.has(channel) && !model.fieldDef(channel).aggregate) {\n      details.push(model.field(channel));\n    }\n    return details;\n  }, []);\n}\n\nexport namespace properties {\n  export function bar(model: Model) {\n    const stack = model.stack();\n\n    // FIXME(#724) apply orient from config if applicable\n    // TODO Use Vega's marks properties interface\n    var p: any = {};\n\n    // x's and width\n    if (stack && X === stack.fieldChannel) {\n      p.x = {\n        scale: X,\n        field: model.field(X) + '_start'\n      };\n      p.x2 = {\n        scale: X,\n        field: model.field(X) + '_end'\n      };\n    } else if (model.fieldDef(X).bin) {\n      p.x = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_start' }),\n        offset: 1\n      };\n      p.x2 = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_end' })\n      };\n    } else if (model.isMeasure(X)) {\n      p.x = {\n        scale: X,\n        field: model.field(X)\n      };\n      if (!model.has(Y) || model.isDimension(Y)) {\n        p.x2 = { value: 0 };\n      }\n    } else {\n      if (model.has(X)) { // is ordinal\n        p.xc = {\n          scale: X,\n          field: model.field(X)\n        };\n      } else {\n        p.x = { value: 0, offset: model.config('singleBarOffset') };\n      }\n    }\n\n    // width\n    if (!p.x2) {\n      if (!model.has(X) || model.isOrdinalScale(X)) { // no X or X is ordinal\n        if (model.has(SIZE)) {\n          p.width = {\n            scale: SIZE,\n            field: model.field(SIZE)\n          };\n        } else {\n          // FIXME consider using band: true here\n          p.width = {\n            value: model.fieldDef(X).scale.bandWidth,\n            offset: -1\n          };\n        }\n      } else { // X is Quant or Time Scale\n        p.width = { value: 2 };\n      }\n    }\n\n    // y's & height\n    if (stack && Y === stack.fieldChannel) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y) + '_start'\n      };\n      p.y2 = {\n        scale: Y,\n        field: model.field(Y) + '_end'\n      };\n    } else if (model.fieldDef(Y).bin) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_start' })\n      };\n      p.y2 = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_end' }),\n        offset: 1\n      };\n    } else if (model.isMeasure(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y)\n      };\n      p.y2 = { field: { group: 'height' } };\n    } else {\n      if (model.has(Y)) { // is ordinal\n        p.yc = {\n          scale: Y,\n          field: model.field(Y)\n        };\n      } else {\n        p.y2 = {\n          field: { group: 'height' },\n          offset: -model.config('singleBarOffset')\n        };\n      }\n\n      if (model.has(SIZE)) {\n        p.height = {\n          scale: SIZE,\n          field: model.field(SIZE)\n        };\n      } else {\n        // FIXME: band:true?\n        p.height = {\n          value: model.fieldDef(Y).scale.bandWidth,\n          offset: -1\n        };\n      }\n    }\n\n    // fill\n    if (model.has(COLOR)) {\n      p.fill = {\n        scale: COLOR,\n        field: model.field(COLOR)\n      };\n    } else {\n      p.fill = { value: model.fieldDef(COLOR).value };\n    }\n\n    // opacity\n    var opacity = model.markOpacity();\n    if (opacity) { p.opacity = { value: opacity }; };\n\n    return p;\n  }\n\n  export function point(model: Model) {\n    // TODO Use Vega's marks properties interface\n    var p: any = {};\n    const marksConfig = model.config('marks');\n\n    // x\n    if (model.has(X)) {\n      p.x = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_mid' })\n      };\n    } else if (!model.has(X)) {\n      p.x = { value: model.fieldDef(X).scale.bandWidth / 2 };\n    }\n\n    // y\n    if (model.has(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_mid' })\n      };\n    } else if (!model.has(Y)) {\n      p.y = { value: model.fieldDef(Y).scale.bandWidth / 2 };\n    }\n\n    // size\n    if (model.has(SIZE)) {\n      p.size = {\n        scale: SIZE,\n        field: model.field(SIZE)\n      };\n    } else if (!model.has(SIZE)) {\n      p.size = { value: model.fieldDef(SIZE).value };\n    }\n\n    // shape\n    if (model.has(SHAPE)) {\n      p.shape = {\n        scale: SHAPE,\n        field: model.field(SHAPE)\n      };\n    } else if (!model.has(SHAPE)) {\n      p.shape = { value: model.fieldDef(SHAPE).value };\n    }\n\n    // fill or stroke\n    if (marksConfig.filled) {\n      if (model.has(COLOR)) {\n        p.fill = {\n          scale: COLOR,\n          field: model.field(COLOR)\n        };\n      } else if (!model.has(COLOR)) {\n        p.fill = { value: model.fieldDef(COLOR).value };\n      }\n    } else {\n      if (model.has(COLOR)) {\n        p.stroke = {\n          scale: COLOR,\n          field: model.field(COLOR)\n        };\n      } else if (!model.has(COLOR)) {\n        p.stroke = { value: model.fieldDef(COLOR).value };\n      }\n      p.strokeWidth = { value: model.config('marks').strokeWidth };\n    }\n\n    // opacity\n    const opacity = model.markOpacity();\n    if (opacity) { p.opacity = { value: opacity }; };\n\n    return p;\n  }\n\n  export function line(model: Model) {\n    // TODO Use Vega's marks properties interface\n    var p: any = {};\n\n    // x\n    if (model.has(X)) {\n      p.x = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_mid' })\n      };\n    } else if (!model.has(X)) {\n      p.x = { value: 0 };\n    }\n\n    // y\n    if (model.has(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_mid' })\n      };\n    } else if (!model.has(Y)) {\n      p.y = { field: { group: 'height' } };\n    }\n\n    // stroke\n    if (model.has(COLOR)) {\n      p.stroke = {\n        scale: COLOR,\n        field: model.field(COLOR)\n      };\n    } else if (!model.has(COLOR)) {\n      p.stroke = { value: model.fieldDef(COLOR).value };\n    }\n\n    // opacity\n    var opacity = model.markOpacity();\n    if (opacity) { p.opacity = { value: opacity }; };\n\n    p.strokeWidth = { value: model.config('marks').strokeWidth };\n\n    applyMarksConfig(p, model.config('marks'), ['interpolate', 'tension']);\n\n    return p;\n  }\n\n  // TODO(#694): optimize area's usage with bin\n  export function area(model: Model) {\n    const stack = model.stack();\n\n    // FIXME(#724): apply orient properties\n\n    // TODO Use Vega's marks properties interface\n    var p: any = {};\n\n    // x\n    if (stack && X === stack.fieldChannel) {\n      p.x = {\n        scale: X,\n        field: model.field(X) + '_start'\n      };\n      p.x2 = {\n        scale: X,\n        field: model.field(X) + '_end'\n      };\n    } else if (model.isMeasure(X)) {\n      p.x = { scale: X, field: model.field(X) };\n      if (model.isDimension(Y)) {\n        p.x2 = {\n          scale: X,\n          value: 0\n        };\n        p.orient = { value: 'horizontal' };\n      }\n    } else if (model.has(X)) {\n      p.x = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_mid' })\n      };\n    } else {\n      p.x = { value: 0 };\n    }\n\n    // y\n    if (stack && Y === stack.fieldChannel) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y) + '_start'\n      };\n      p.y2 = {\n        scale: Y,\n        field: model.field(Y) + '_end'\n      };\n    } else if (model.isMeasure(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y)\n      };\n      p.y2 = {\n        scale: Y,\n        value: 0\n      };\n    } else if (model.has(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_mid' })\n      };\n    } else {\n      p.y = { field: { group: 'height' } };\n    }\n\n    // fill\n    if (model.has(COLOR)) {\n      p.fill = {\n        scale: COLOR,\n        field: model.field(COLOR)\n      };\n    } else if (!model.has(COLOR)) {\n      p.fill = { value: model.fieldDef(COLOR).value };\n    }\n\n    // opacity\n    var opacity = model.markOpacity();\n    if (opacity) { p.opacity = { value: opacity }; };\n\n    applyMarksConfig(p, model.config('marks'), ['interpolate', 'tension']);\n\n    return p;\n  }\n\n  export function tick(model: Model) {\n    // TODO Use Vega's marks properties interface\n    // FIXME are /3 , /1.5 divisions here correct?\n    var p: any = {};\n\n    // x\n    if (model.has(X)) {\n      p.x = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_mid' })\n      };\n      if (model.isDimension(X)) {\n        p.x.offset = -model.fieldDef(X).scale.bandWidth / 3;\n      }\n    } else if (!model.has(X)) {\n      p.x = { value: 0 };\n    }\n\n    // y\n    if (model.has(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_mid' })\n      };\n      if (model.isDimension(Y)) {\n        p.y.offset = -model.fieldDef(Y).scale.bandWidth / 3;\n      }\n    } else if (!model.has(Y)) {\n      p.y = { value: 0 };\n    }\n\n    // width\n    if (!model.has(X) || model.isDimension(X)) {\n      // TODO(#694): optimize tick's width for bin\n      p.width = { value: model.fieldDef(X).scale.bandWidth / 1.5 };\n    } else {\n      p.width = { value: 1 };\n    }\n\n    // height\n    if (!model.has(Y) || model.isDimension(Y)) {\n      // TODO(#694): optimize tick's height for bin\n      p.height = { value: model.fieldDef(Y).scale.bandWidth / 1.5 };\n    } else {\n      p.height = { value: 1 };\n    }\n\n    // fill\n    if (model.has(COLOR)) {\n      p.fill = {\n        scale: COLOR,\n        field: model.field(COLOR)\n      };\n    } else {\n      p.fill = { value: model.fieldDef(COLOR).value };\n    }\n\n    // opacity\n    var opacity = model.markOpacity();\n    if (opacity) { p.opacity = { value: opacity }; };\n\n    return p;\n  }\n\n  function filled_point_props(shape) {\n    return function(model: Model) {\n      // TODO Use Vega's marks properties interface\n      var p: any = {};\n\n      // x\n      if (model.has(X)) {\n        p.x = {\n          scale: X,\n          field: model.field(X, { binSuffix: '_mid' })\n        };\n      } else if (!model.has(X)) {\n        p.x = { value: model.fieldDef(X).scale.bandWidth / 2 };\n      }\n\n      // y\n      if (model.has(Y)) {\n        p.y = {\n          scale: Y,\n          field: model.field(Y, { binSuffix: '_mid' })\n        };\n      } else if (!model.has(Y)) {\n        p.y = { value: model.fieldDef(Y).scale.bandWidth / 2 };\n      }\n\n      // size\n      if (model.has(SIZE)) {\n        p.size = {\n          scale: SIZE,\n          field: model.field(SIZE)\n        };\n      } else if (!model.has(X)) {\n        p.size = { value: model.fieldDef(SIZE).value };\n      }\n\n      // shape\n      p.shape = { value: shape };\n\n      // fill\n      if (model.has(COLOR)) {\n        p.fill = {\n          scale: COLOR,\n          field: model.field(COLOR)\n        };\n      } else if (!model.has(COLOR)) {\n        p.fill = { value: model.fieldDef(COLOR).value };\n      }\n\n      // opacity\n      var opacity = model.markOpacity();\n      if (opacity) { p.opacity = { value: opacity }; };\n\n      return p;\n    };\n  }\n\n  export const circle = filled_point_props('circle');\n  export const square = filled_point_props('square');\n\n  export function textBackground(model: Model) {\n    return {\n      x: { value: 0 },\n      y: { value: 0 },\n      width: { field: { group: 'width' } },\n      height: { field: { group: 'height' } },\n      fill: { scale: COLOR, field: model.field(COLOR) }\n    };\n  }\n\n  export function text(model: Model) {\n    // TODO Use Vega's marks properties interface\n    let p: any = {};\n    const fieldDef = model.fieldDef(TEXT);\n    const marksConfig = model.config('marks');\n\n    // x\n    if (model.has(X)) {\n      p.x = {\n        scale: X,\n        field: model.field(X, { binSuffix: '_mid' })\n      };\n    } else if (!model.has(X)) {\n      if (model.has(TEXT) && model.fieldDef(TEXT).type === QUANTITATIVE) {\n        // TODO: make this -5 offset a config\n        p.x = { field: { group: 'width' }, offset: -5 };\n      } else {\n        p.x = { value: model.fieldDef(X).scale.bandWidth / 2 };\n      }\n    }\n\n    // y\n    if (model.has(Y)) {\n      p.y = {\n        scale: Y,\n        field: model.field(Y, { binSuffix: '_mid' })\n      };\n    } else if (!model.has(Y)) {\n      p.y = { value: model.fieldDef(Y).scale.bandWidth / 2 };\n    }\n\n    // size\n    if (model.has(SIZE)) {\n      p.fontSize = {\n        scale: SIZE,\n        field: model.field(SIZE)\n      };\n    } else if (!model.has(SIZE)) {\n      p.fontSize = { value: marksConfig.fontSize };\n    }\n\n    // fill\n    // TODO: consider if color should just map to fill instead?\n\n    // opacity\n    var opacity = model.markOpacity();\n    if (opacity) { p.opacity = { value: opacity }; };\n\n    // text\n    if (model.has(TEXT)) {\n      if (model.fieldDef(TEXT).type === QUANTITATIVE) {\n        // TODO: revise this line\n        var numberFormat = marksConfig.format !== undefined ?\n          marksConfig.format : model.numberFormat(TEXT);\n\n        p.text = {\n          template: '{{' + model.field(TEXT, { datum: true }) +\n          ' | number:\\'' + numberFormat + '\\'}}'\n        };\n      } else {\n        p.text = { field: model.field(TEXT) };\n      }\n    } else {\n      p.text = { value: fieldDef.value };\n    }\n\n    applyMarksConfig(p, marksConfig,\n      ['angle', 'align', 'baseline', 'dx', 'dy', 'fill', 'font', 'fontWeight',\n        'fontStyle', 'radius', 'theta']);\n\n    return p;\n  }\n}\n",
    "// https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#11-ambient-declarations\ndeclare var exports;\n\nimport {extend} from '../util';\nimport {Model} from './Model';\nimport {SHARED_DOMAIN_OPS} from '../aggregate';\nimport {COLUMN, ROW, X, Y, SHAPE, SIZE, COLOR, TEXT, Channel} from '../channel';\nimport {SOURCE, STACKED} from '../data';\nimport * as time from './time';\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\nimport {BAR, TEXT as TEXT_MARK} from '../mark';\n\nexport function compileScales(names: Array<Channel>, model: Model) {\n  return names.reduce(function(a, channel: Channel) {\n    var scaleDef: any = {\n      name: channel,\n      type: type(channel, model),\n    };\n\n    scaleDef.domain = domain(model, channel, scaleDef.type);\n    extend(scaleDef, rangeMixins(model, channel, scaleDef.type));\n\n    // Add optional properties\n    [\n      // general properties\n      'reverse', 'round',\n      // quantitative / time\n      'clamp', 'nice',\n      // quantitative\n      'exponent', 'zero',\n      // ordinal\n      'bandWidth', 'outerPadding', 'padding', 'points'\n    ].forEach(function(property) {\n      // TODO include fieldDef as part of the parameters\n      var value = exports[property](model, channel, scaleDef.type);\n      if (value !== undefined) {\n        scaleDef[property] = value;\n      }\n    });\n\n    return (a.push(scaleDef), a);\n  }, []);\n}\n\nexport function type(channel: Channel, model: Model): string {\n  const fieldDef = model.fieldDef(channel);\n  switch (fieldDef.type) {\n    case NOMINAL: // fall through\n      return 'ordinal';\n    case ORDINAL:\n      let range = fieldDef.scale.range;\n      return channel === COLOR && (typeof range !== 'string') ? 'linear' : 'ordinal';\n    case TEMPORAL:\n      return time.scale.type(fieldDef.timeUnit, channel);\n    case QUANTITATIVE:\n      if (fieldDef.bin) {\n        return channel === ROW || channel === COLUMN || channel === SHAPE ? 'ordinal' : 'linear';\n      }\n      return fieldDef.scale.type;\n  }\n}\n\nexport function domain(model: Model, channel:Channel, type) {\n  var fieldDef = model.fieldDef(channel);\n\n  if (fieldDef.scale.domain) { // explicit value\n    return fieldDef.scale.domain;\n  }\n\n  // special case for temporal scale\n  if (fieldDef.type === TEMPORAL) {\n    var range = time.scale.domain(fieldDef.timeUnit, channel);\n    if (range) { return range; }\n  }\n\n  // For stack, use STACKED data.\n  var stack = model.stack();\n  if (stack && channel === stack.fieldChannel) {\n    const facet = model.has(ROW) || model.has(COLUMN);\n    return {\n      data: STACKED,\n      field: model.field(channel, {\n        // If faceted, scale is determined by the max of sum in each facet.\n        prefn: (facet ? 'max_' : '') + 'sum_'\n      })\n    };\n  }\n\n  var useRawDomain = _useRawDomain(model, channel);\n  var sort = domainSort(model, channel, type);\n\n  if (useRawDomain) { // useRawDomain - only Q/T\n    return {\n      data: SOURCE,\n      field: model.field(channel, {noAggregate:true})\n    };\n  } else if (fieldDef.bin) { // bin\n\n    return {\n      data: model.dataTable(),\n      field: type === 'ordinal' ?\n        // ordinal scale only use bin start for now\n        model.field(channel, { binSuffix: '_start' }) :\n        // need to merge both bin_start and bin_end for non-ordinal scale\n        [\n          model.field(channel, { binSuffix: '_start' }),\n          model.field(channel, { binSuffix: '_end' })\n        ]\n    };\n  } else if (sort) { // have sort -- only for ordinal\n    return {\n      // If sort by aggregation of a specified sort field, we need to use SOURCE table,\n      // so we can aggregate values for the scale independently from the main aggregation.\n      data: sort.op ? SOURCE : model.dataTable(),\n      field: model.field(channel),\n      sort: sort\n    };\n  } else {\n    return {\n      data: model.dataTable(),\n      field: model.field(channel)\n    };\n  }\n}\n\nexport function domainSort(model: Model, channel: Channel, type):any {\n  var sort = model.fieldDef(channel).sort;\n  if (sort === 'ascending' || sort === 'descending') {\n    return true;\n  }\n\n  // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n  if (type === 'ordinal' && typeof sort !== 'string') {\n    return {\n      op: sort.op,\n      field: sort.field\n    };\n  }\n  return undefined;\n}\n\nexport function reverse(model: Model, channel: Channel) {\n  var sort = model.fieldDef(channel).sort;\n  return sort && (typeof sort === 'string' ?\n                    sort === 'descending' :\n                    sort.order === 'descending'\n                 ) ? true : undefined;\n}\n\n/**\n * Determine if useRawDomain should be activated for this scale.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `useRawDomain` is enabled either through scale or config\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nexport function _useRawDomain (model: Model, channel: Channel) {\n  const fieldDef = model.fieldDef(channel);\n\n  return fieldDef.scale.useRawDomain && //  if useRawDomain is enabled\n    // only applied to aggregate table\n    fieldDef.aggregate &&\n    // only activated if used with aggregate functions that produces values ranging in the domain of the source data\n    SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) >= 0 &&\n    (\n      // Q always uses quantitative scale except when it's binned.\n      // Binned field has similar values in both the source table and the summary table\n      // but the summary table has fewer values, therefore binned fields draw\n      // domain values from the summary table.\n      (fieldDef.type === QUANTITATIVE && !fieldDef.bin) ||\n      // T uses non-ordinal scale when there's no unit or when the unit is not ordinal.\n      (fieldDef.type === TEMPORAL &&\n        (!fieldDef.timeUnit || time.scale.type(fieldDef.timeUnit, channel) === 'linear')\n      )\n    );\n}\n\nexport function bandWidth(model: Model, channel: Channel, scaleType) {\n  if (scaleType === 'ordinal') {\n    return model.fieldDef(channel).scale.bandWidth;\n  }\n  return undefined;\n}\n\nexport function clamp(model: Model, channel: Channel) {\n  // only return value if explicit value is specified.\n  return model.fieldDef(channel).scale.clamp;\n}\n\nexport function exponent(model: Model, channel: Channel) {\n  // only return value if explicit value is specified.\n  return model.fieldDef(channel).scale.exponent;\n}\n\nexport function nice(model: Model, channel: Channel, scaleType) {\n  if (model.fieldDef(channel).scale.nice !== undefined) {\n    // explicit value\n    return model.fieldDef(channel).scale.nice;\n  }\n\n  switch (channel) {\n    case X: /* fall through */\n    case Y:\n      if (scaleType === 'time' || scaleType === 'ordinal') {\n        return undefined;\n      }\n      return true;\n\n    case ROW: /* fall through */\n    case COLUMN:\n      return true;\n  }\n  return undefined;\n}\n\nexport function outerPadding(model: Model, channel: Channel, scaleType) {\n  if (scaleType === 'ordinal') {\n    if (model.fieldDef(channel).scale.outerPadding !== undefined) {\n      return model.fieldDef(channel).scale.outerPadding; // explicit value\n    }\n  }\n  return undefined;\n}\n\nexport function padding(model: Model, channel: Channel, scaleType) {\n  if (scaleType === 'ordinal') {\n    // Both explicit and non-explicit values are handled by the helper method.\n    return model.fieldDef(channel).scale.padding;\n  }\n  return undefined;\n}\n\nexport function points(model: Model, channel: Channel, scaleType) {\n  if (scaleType === 'ordinal') {\n    if (model.fieldDef(channel).scale.points !== undefined) {\n      // explicit value\n      return model.fieldDef(channel).scale.points;\n    }\n\n    switch (channel) {\n      case X:\n      case Y:\n        return true;\n    }\n  }\n  return undefined;\n}\n\n\nexport function rangeMixins(model: Model, channel: Channel, scaleType): any {\n  var fieldDef = model.fieldDef(channel);\n\n  if (fieldDef.scale.range) { // explicit value\n    return {range: fieldDef.scale.range};\n  }\n\n  switch (channel) {\n    case X:\n      // we can't use {range: \"width\"} here since we put scale in the root group\n      // not inside the cell, so scale is reusable for axes group\n      return {rangeMin: 0, rangeMax: model.layout().cellWidth};\n    case Y:\n      // We can't use {range: \"height\"} here for the same reason\n      if (scaleType === 'ordinal') {\n        return {rangeMin: 0, rangeMax: model.layout().cellHeight};\n      }\n      return {rangeMin: model.layout().cellHeight, rangeMax :0};\n    case SIZE:\n      if (model.is(BAR)) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        return {\n          range: [3, Math.max(\n            model.fieldDef(X).scale.bandWidth,\n            model.fieldDef(Y).scale.bandWidth\n          )]\n        };\n      } else if (model.is(TEXT_MARK)) {\n        return {range: [8, 40]};\n      }\n      // else -- point\n      var bandWidth = Math.min(model.fieldDef(X).scale.bandWidth, model.fieldDef(Y).scale.bandWidth) - 1;\n      return {range: [10, 0.8 * bandWidth*bandWidth]};\n    case SHAPE:\n      return {range: 'shapes'};\n    case COLOR:\n      if (scaleType === 'ordinal') {\n        return {range: 'category10'};\n      } else { // time or quantitative\n        return {range: ['#AFC6A3', '#09622A']}; // tableau greens\n      }\n    case ROW:\n      return {range: 'height'};\n    case COLUMN:\n      return {range: 'width'};\n  }\n  return {};\n}\n\nexport function round(model: Model, channel: Channel) {\n  if (model.fieldDef(channel).scale.round !== undefined) {\n    return model.fieldDef(channel).scale.round;\n  }\n\n  // FIXME: revise if round is already the default value\n  switch (channel) {\n    case X: /* fall through */\n    case Y:\n    case ROW:\n    case COLUMN:\n    case SIZE:\n      return true;\n  }\n  return undefined;\n}\n\nexport function zero(model: Model, channel: Channel) {\n  var fieldDef = model.fieldDef(channel);\n  var timeUnit = fieldDef.timeUnit;\n\n  if (fieldDef.scale.zero !== undefined) {\n    // explicit value\n    return fieldDef.scale.zero;\n  }\n\n  if (fieldDef.type === TEMPORAL) {\n    if (timeUnit === 'year') {\n      // year is using linear scale, but should not include zero\n      return false;\n    }\n    // If there is no timeUnit or the timeUnit uses ordinal scale,\n    // zero property is ignored by vega so we should not generate them any way\n    return undefined;\n  }\n  if (fieldDef.bin) {\n    // Returns false (undefined) by default of bin\n    return false;\n  }\n\n  return channel === X || channel === Y ?\n    // if not bin / temporal, returns undefined for X and Y encoding\n    // since zero is true by default in vega for linear scale\n    undefined :\n    false;\n}\n",
    "import {Model} from './Model';\nimport {Channel} from '../channel';\nimport {isObject} from '../util';\n\nexport interface StackProperties {\n  groupbyChannel: Channel;\n  fieldChannel: Channel;\n  stackChannel: Channel; // COLOR or DETAIL\n  config: any;\n}\n\n// TODO: put all vega interface in one place\ninterface StackTransform {\n  type: string;\n  offset?: any;\n  groupby: any;\n  field: any;\n  sortby: any;\n  output: any;\n}\n\n// impute data for stacked area\nexport function imputeTransform(model: Model) {\n  const stack = model.stack();\n  return {\n    type: 'impute',\n    field: model.field(stack.fieldChannel),\n    groupby: [model.field(stack.stackChannel)],\n    orderby: [model.field(stack.groupbyChannel)],\n    method: 'value',\n    value: 0\n  };\n}\n\nexport function stackTransform(model: Model) {\n  const stack = model.stack();\n  const sortby = stack.config.sort === 'descending' ?\n                   '-' + model.field(stack.stackChannel) :\n                 stack.config.sort === 'ascending' ?\n                   model.field(stack.stackChannel) :\n                 isObject(stack.config.sort) ?\n                   stack.config.sort :\n                   '-' + model.field(stack.stackChannel); // default\n\n  const valName = model.field(stack.fieldChannel);\n\n  // add stack transform to mark\n  var transform: StackTransform = {\n    type: 'stack',\n    groupby: [model.field(stack.groupbyChannel)],\n    field: model.field(stack.fieldChannel),\n    sortby: sortby,\n    output: {\n      start: valName + '_start',\n      end: valName + '_end'\n    }\n  };\n\n  if (stack.config.offset) {\n    transform.offset = stack.config.offset;\n  }\n  return transform;\n}\n",
    "import {FieldDef} from '../schema/fielddef.schema';\nimport * as util from '../util';\nimport {COLOR, COLUMN, ROW, Channel} from '../channel';\n\nexport function cardinality(fieldDef: FieldDef, stats, filterNull, type) {\n  var timeUnit = fieldDef.timeUnit;\n  switch (timeUnit) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[fieldDef.field],\n        yearstat = stats['year_' + fieldDef.field];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n}\n\nexport function formula(timeUnit, field: string) {\n  // TODO(kanitw): add formula to other time format\n  var fn = 'utc' + timeUnit;\n  return fn + '(' + field + ')';\n}\n\nexport namespace scale {\n  // FIXME move this to scale.type\n  export function type(timeUnit, channel: Channel) {\n    if (channel === COLOR) {\n      // FIXME if user specify scale.range as ordinal presets, then this should be ordinal\n      return 'linear'; // time has order, so use interpolated ordinal color scale.\n    }\n    if (channel === COLUMN || channel === ROW) {\n      return 'ordinal';\n    }\n\n    switch (timeUnit) {\n      case 'hours':\n      case 'day':\n      case 'date':\n      case 'month':\n        return 'ordinal';\n      case 'year':\n      case 'second':\n      case 'minute':\n        return 'linear';\n    }\n    return 'time';\n  }\n\n  export function domain(timeUnit, channel?: Channel) {\n    var isColor = channel === COLOR;\n    switch (timeUnit) {\n      case 'seconds':\n      case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n      case 'hours': return isColor ? [0,23] : util.range(0, 24);\n      case 'day': return isColor ? [0,6] : util.range(0, 7);\n      case 'date': return isColor ? [1,31] : util.range(1, 32);\n      case 'month': return isColor ? [0,11] : util.range(0, 12);\n    }\n    return null;\n  }\n}\n\n/** returns the template name used for axis labels for a time unit */\nexport function labelTemplate(timeUnit, abbreviated=false): string {\n  var postfix = abbreviated ? '-abbrev' : '';\n  switch (timeUnit) {\n    case 'day':\n      return 'day' + postfix;\n    case 'month':\n      return 'month' + postfix;\n  }\n  return null;\n}\n",
    "/*\n * Constants and utilities for data.\n */\n\nimport {NOMINAL, QUANTITATIVE, TEMPORAL} from './type';\n\nexport const SUMMARY = 'summary';\nexport const SOURCE = 'source';\nexport const STACKED = 'stacked';\nexport const LAYOUT = 'layout';\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\n// TODO: ALL_CAPS\nexport const types = {\n  'boolean': NOMINAL,\n  'number': QUANTITATIVE,\n  'integer': QUANTITATIVE,\n  'date': TEMPORAL,\n  'string': NOMINAL\n};\n",
    "// utility for encoding mapping\nimport {Encoding} from './schema/encoding.schema';\nimport {FieldDef} from './schema/fielddef.schema';\nimport {Channel, CHANNELS} from './channel';\n\nexport function countRetinal(encoding: Encoding) {\n  var count = 0;\n  if (encoding.color) { count++; }\n  if (encoding.size) { count++; }\n  if (encoding.shape) { count++; }\n  return count;\n}\n\nexport function has(encoding: Encoding, channel: Channel) {\n  var fieldDef: FieldDef = encoding && encoding[channel];\n  return fieldDef && fieldDef.field;\n}\n\nexport function isAggregate(encoding: Encoding) {\n  for (var k in encoding) {\n    if (has(encoding, k) && encoding[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function fieldDefs(encoding: Encoding): FieldDef[] {\n  var arr = [];\n  CHANNELS.forEach(function(k) {\n    if (has(encoding, k)) {\n      arr.push(encoding[k]);\n    }\n  });\n  return arr;\n};\n\nexport function forEach(encoding: Encoding,\n  f: (fd: FieldDef, c: Channel, i: number) => void) {\n  var i = 0;\n  CHANNELS.forEach(function(channel) {\n    if (has(encoding, channel)) {\n      f(encoding[channel], channel, i++);\n    }\n  });\n}\n\nexport function map(encoding: Encoding,\n  f: (fd: FieldDef, c: Channel, e: Encoding) => any) {\n  var arr = [];\n  CHANNELS.forEach(function(k) {\n    if (has(encoding, k)) {\n      arr.push(f(encoding[k], k, encoding));\n    }\n  });\n  return arr;\n}\n\nexport function reduce(encoding: Encoding,\n  f: (acc: any, fd: FieldDef, c: Channel, e: Encoding) => any,\n  init) {\n  var r = init;\n  CHANNELS.forEach(function(k) {\n    if (has(encoding, k)) {\n      r = f(r, encoding[k], k, encoding);\n    }\n  });\n  return r;\n}\n",
    "// utility for a field definition object\n\nimport {FieldDef} from './schema/fielddef.schema';\nimport {contains, getbins} from './util';\nimport * as time from './compiler/time';\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from './type';\n\n\n// TODO remove these \"isDimension/isMeasure\" stuff\nfunction _isFieldDimension(fieldDef: FieldDef) {\n  return contains([NOMINAL, ORDINAL], fieldDef.type) || !!fieldDef.bin ||\n    (fieldDef.type === TEMPORAL && !!fieldDef.timeUnit);\n}\n\nexport function isDimension(fieldDef: FieldDef) {\n  return fieldDef && _isFieldDimension(fieldDef);\n}\n\nexport function isMeasure(fieldDef: FieldDef) {\n  return fieldDef && !_isFieldDimension(fieldDef);\n}\n\nexport const COUNT_DISPLAYNAME = 'Number of Records';\n\nexport function count(): FieldDef {\n  return { field: '*', aggregate: 'count', type: QUANTITATIVE, displayName: COUNT_DISPLAYNAME };\n}\n\nexport function isCount(fieldDef: FieldDef) {\n  return fieldDef.aggregate === 'count';\n}\n\n// FIXME remove this, and the getbins method\n// FIXME this depends on channel\nexport function cardinality(fieldDef: FieldDef, stats, filterNull = {}) {\n  // FIXME need to take filter into account\n\n  var stat = stats[fieldDef.field];\n  var type = fieldDef.type;\n\n  if (fieldDef.bin) {\n    // need to reassign bin, otherwise compilation will fail due to a TS bug.\n    const bin = fieldDef.bin;\n    let maxbins = (typeof bin === 'boolean') ? undefined : bin.maxbins;\n    if (maxbins === undefined) {\n      maxbins = 10;\n    }\n\n    var bins = getbins(stat, maxbins);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (fieldDef.type === TEMPORAL) {\n    var cardinality = time.cardinality(fieldDef, stats, filterNull, type);\n    if (cardinality !== null) { return cardinality; }\n    // otherwise use calculation below\n  }\n  if (fieldDef.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.missing > 0 && filterNull[type] ? 1 : 0);\n}\n",
    "export enum Mark {\n  AREA = 'area' as any,\n  BAR = 'bar' as any,\n  LINE = 'line' as any,\n  POINT = 'point' as any,\n  TEXT = 'text' as any,\n  TICK = 'tick' as any,\n  CIRCLE = 'circle' as any,\n  SQUARE = 'square' as any\n}\n\nexport const AREA = Mark.AREA;\nexport const BAR = Mark.BAR;\nexport const LINE = Mark.LINE;\nexport const POINT = Mark.POINT;\nexport const TEXT = Mark.TEXT;\nexport const TICK = Mark.TICK;\n\n// TODO: decide if we want to keep them?\nexport const CIRCLE = Mark.CIRCLE;\nexport const SQUARE = Mark.SQUARE;\n",
    "export interface Axis {\n  // Vega Axis Properties\n  format?: string;\n  grid?: boolean;\n  layer?: string;\n  orient?: string;\n  ticks?: number;\n  title?: string;\n  tickSize?: number;\n  offset?: number;\n  shortTimeNames?: boolean;\n  // Vega-Lite only\n  labelMaxLength?: number;\n  titleMaxLength?: number;\n  titleOffset?: number;\n  properties?: any; // TODO: declare VgAxisProperties\n}\n\nexport var axis = {\n  type: 'object',\n  properties: {\n    /* Vega Axis Properties */\n    format: {\n      type: 'string',\n      default: undefined,  // auto\n      description: 'The formatting pattern for axis labels. '+\n                   'If not undefined, this will be determined by ' +\n                   'the max value ' +\n                   'of the field.'\n    },\n    grid: {\n      type: 'boolean',\n      default: undefined,\n      description: 'A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise.'\n    },\n    layer: {\n      type: 'string',\n      default: undefined,\n      description: 'A string indicating if the axis (and any gridlines) should be placed above or below the data marks.'\n    },\n    orient: {\n      type: 'string',\n      default: undefined,\n      enum: ['top', 'right', 'left', 'bottom'],\n      description: 'The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).'\n    },\n    ticks: {\n      type: 'integer',\n      default: undefined,\n      minimum: 0,\n      description: 'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale\\'s range.'\n    },\n    /* Vega Axis Properties that are automatically populated by Vega-lite */\n    title: {\n      type: 'string',\n      default: undefined,\n      description: 'A title for the axis. (Shows field name and its function by default.)'\n    },\n    /* Vega-lite only */\n    labelMaxLength: {\n      type: 'integer',\n      default: 25,\n      minimum: 0,\n      description: 'Truncate labels that are too long.'\n    },\n    titleMaxLength: {\n      type: 'integer',\n      default: undefined,\n      minimum: 0,\n      description: 'Max length for axis title if the title is automatically generated from the field\\'s description'\n    },\n    titleOffset: {\n      type: 'integer',\n      default: undefined,  // auto\n      description: 'A title offset value for the axis.'\n    },\n    shortTimeNames: {\n      type: 'boolean',\n      default: false,\n      description: 'Whether month names and weekday names should be abbreviated.'\n    },\n    properties: {\n      type: 'object',\n      default: undefined,\n      description: 'Optional mark property definitions for custom axis styling.'\n    }\n  }\n};\n",
    "import {QUANTITATIVE} from '../type';\nimport {toMap} from '../util';\n\nexport interface Bin {\n  min?: number;\n  max?: number;\n  base?: number;\n  step?: number;\n  steps?: number[];\n  minstep?: number;\n  div?: number[];\n  maxbins?: number;\n}\n\nexport var bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    min: {\n      type: 'number',\n      default: undefined,\n      description: 'The minimum bin value to consider. If unspecified, the minimum value of the specified field is used.'\n    },\n    max: {\n      type: 'number',\n      default: undefined,\n      description: 'The maximum bin value to consider. If unspecified, the maximum value of the specified field is used.'\n    },\n    base: {\n      type: 'number',\n      default: undefined,\n      description: 'The number base to use for automatic bin determination (default is base 10).'\n    },\n    step: {\n      type: 'number',\n      default: undefined,\n      description: 'An exact step size to use between bins. If provided, options such as maxbins will be ignored.'\n    },\n    steps: {\n      type: 'array',\n      default: undefined,\n      description: 'An array of allowable step sizes to choose from.'\n    },\n    minstep: {\n      type: 'number',\n      default: undefined,\n      description: 'A minimum allowable step size (particularly useful for integer values).'\n    },\n    div: {\n      type: 'array',\n      default: undefined,\n      description: 'Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.'\n    },\n    maxbins: {\n      type: 'integer',\n      default: undefined,\n      minimum: 2,\n      description: 'Maximum number of bins.'\n    }\n  },\n  supportedTypes: toMap([QUANTITATIVE]) // TODO: add O after finishing #81\n};\n",
    "export interface CellConfig {\n  width?: number;\n  height?: number;\n  padding?: number;\n\n  gridColor?: string;\n  gridOpacity?: number;\n  gridOffset?: number;\n\n  fill?: string;\n  fillOpacity?: number;\n  stroke?: string;\n  strokeWidth?: number;\n  strokeOpacity? :number;\n  strokeDashOffset?: number;\n}\n\nexport const cellConfig = {\n  type: 'object',\n  properties: {\n    width: {\n      type: 'integer',\n      default: 200\n    },\n    height: {\n      type: 'integer',\n      default: 200\n    },\n    padding: {\n      type: 'integer',\n      default: 16,\n      description: 'default padding between facets.'\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.25\n    },\n    gridOffset: {\n      type: 'number',\n      default: 6 // equal to tickSize\n    },\n\n    // Group properties\n    fill: {\n      type: 'string',\n      role: 'color',\n      default: 'rgba(0,0,0,0)'\n    },\n    fillOpacity: {\n      type: 'number',\n    },\n    stroke: {\n      type: 'string',\n      role: 'color',\n    },\n    strokeWidth: {\n      type: 'integer'\n    },\n    strokeOpacity: {\n      type: 'number'\n    },\n    strokeDash: {\n      type: 'array',\n      default: undefined\n    },\n    strokeDashOffset: {\n      type: 'integer',\n      description: 'The offset (in pixels) into which to begin drawing with the stroke dash array.'\n    }\n  }\n};\n",
    "export interface MarksConfig {\n  filled?: boolean;\n  format?: string;\n\n  // General Vega\n  opacity?: number;\n  strokeWidth?: number;\n  strokeDash?: number[];\n  strokeDashOffset?: number[];\n  fill?: string;\n\n  // Bar / area\n  orient?: string;\n  // Line / area\n  interpolate?: string;\n  tension?: number;\n\n  // Text-only\n  align?: string;\n  angle?: number;\n  baseline?: string;\n  dx?: number;\n  dy?: number;\n  radius?: number;\n  theta?: number;\n  font?: string;\n  fontStyle?: string;\n  fontWeight?: string;\n}\n\nexport const marksConfig = {\n  type: 'object',\n  properties: {\n    // Vega-Lite special\n    filled: {\n      type: 'boolean',\n      default: false,\n      description: 'Whether the shape\\'s color should be used as fill color instead of stroke color.'\n    },\n    format: {\n      type: 'string',\n      default: '',  // auto\n      description: 'The formatting pattern for text value.'+\n                   'If not defined, this will be determined automatically'\n    },\n\n    // General Vega\n    // TODO consider removing as it is conflicting with color.value\n    fill: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    opacity: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    },\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    strokeDash: {\n      type: 'array',\n      default: undefined,\n      description: 'An array of alternating stroke, space lengths for creating dashed or dotted lines.'\n    },\n    strokeDashOffset: {\n      type: 'array',\n      default: undefined,\n      description: 'The offset (in pixels) into which to begin drawing with the stroke dash array.'\n    },\n\n    // bar / area\n    orient: {\n      type: 'string',\n      default: undefined,\n      description: 'The orientation of this area mark. One of horizontal (the default) or vertical.'\n    },\n\n    // line / area\n    interpolate: {\n      type: 'string',\n      default: undefined,\n      // TODO better describe that some of them isn't supported in area\n      description: 'The line interpolation method to use. One of linear, step-before, step-after, basis, basis-open, basis-closed, bundle, cardinal, cardinal-open, cardinal-closed, monotone.'\n    },\n    tension: {\n      type: 'number',\n      default: undefined,\n      description: 'Depending on the interpolation type, sets the tension parameter.'\n    },\n\n    // text-only\n    align: {\n      type: 'string',\n      default: 'right',\n      enum: ['left', 'right', 'center'],\n      description: 'The horizontal alignment of the text. One of left, right, center.'\n    },\n    angle: {\n      type: 'number',\n      default: undefined,\n      description: 'The rotation angle of the text, in degrees.'\n    },\n    baseline: {\n      type: 'string',\n      default: 'middle',\n      enum: ['top', 'middle', 'bottom'],\n      description: 'The vertical alignment of the text. One of top, middle, bottom.'\n    },\n    dx: {\n      type: 'number',\n      default: undefined,\n      description: 'The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the angle property.'\n    },\n    dy: {\n      type: 'number',\n      default: undefined,\n      description: 'The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the angle property.'\n    },\n    font: {\n      type: 'string',\n      default: undefined,\n      role: 'font',\n      description: 'The typeface to set the text in (e.g., Helvetica Neue).'\n    },\n    // fontSize excluded as we use size.value\n    fontStyle: {\n      type: 'string',\n      default: undefined,\n      enum: ['normal', 'italic'],\n      description: 'The font style (e.g., italic).'\n    },\n    fontWeight: {\n      type: 'string',\n      enum: ['normal', 'bold'],\n      default: undefined,\n      description: 'The font weight (e.g., bold).'\n    },\n    radius: {\n      type: 'number',\n      default: undefined,\n      description: 'Polar coordinate radial offset, in pixels, of the text label from the origin determined by the x and y properties.'\n    },\n    theta: {\n      type: 'number',\n      default: undefined,\n      description: 'Polar coordinate angle, in radians, of the text label from the origin determined by the x and y properties. Values for theta follow the same convention of arc mark startAngle and endAngle properties: angles are measured in radians, with 0 indicating \"north\".'\n    }\n  }\n};\n",
    "import {StackConfig, stackConfig} from './config.stack.schema';\nimport {CellConfig, cellConfig} from './config.cell.schema';\nimport {MarksConfig, marksConfig} from './config.marks.schema';\n\nexport interface Config {\n  width?: number;\n  height?: number;\n  viewport?: number;\n  padding?: number|string;\n  background?: string;\n  description?: string;\n  spec?: any; // TODO: VgGroupMarks\n  sortLineBy?: string;\n  characterWidth?: number;\n\n  stack?: StackConfig;\n  cell?: CellConfig;\n  marks?: MarksConfig;\n\n  // TODO: revise\n  filterNull?: any;\n  textCellWidth?: any;\n  singleBarOffset?: number;\n  numberFormat?: string;\n  timeFormat?: string;\n}\n\nexport const config = {\n  type: 'object',\n  properties: {\n    // template\n    // TODO: add this back once we have top-down layout approach\n    // width: {\n    //   type: 'integer',\n    //   default: undefined\n    // },\n    // height: {\n    //   type: 'integer',\n    //   default: undefined\n    // },\n    // padding: {\n    //   type: ['number', 'string'],\n    //   default: 'auto'\n    // },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined,\n      description: 'The width and height of the on-screen viewport, in pixels. If necessary, clipping and scrolling will be applied.'\n    },\n    background: {\n      type: 'string',\n      role: 'color',\n      default: undefined,\n      description: 'CSS color property to use as background of visualization. Default is `\"transparent\"`.'\n    },\n    scene: {\n      type: 'object',\n      default: undefined,\n      description: 'An object to style the top-level scenegraph root. Available properties include `fill`, `fillOpacity`, `stroke`, `strokeOpacity`, `strokeWidth`, `strokeDash`, `strokeDashOffset`'\n    },\n\n    // filter null\n    // TODO(#597) revise this config\n    filterNull: {\n      type: 'object',\n      properties: {\n        nominal: {type:'boolean', default: false},\n        ordinal: {type:'boolean', default: false},\n        quantitative: {type:'boolean', default: true},\n        temporal: {type:'boolean', default: true}\n      }\n    },\n\n    // small multiples\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // layout\n    // TODO: add orient\n    sortLineBy: {\n      type: 'string',\n      default: undefined,\n      description: 'Data field to sort line by. ' +\n        '\\'-\\' prefix can be added to suggest descending order.'\n    },\n    // nested\n    stack: stackConfig,\n    cell: cellConfig,\n    marks: marksConfig,\n\n    // FIXME remove this\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    },\n    // FIXME(#497) handle this\n    numberFormat: {\n      type: 'string',\n      default: 's',\n      description: 'D3 Number format for axis labels and text tables.'\n    },\n    // FIXME(#497) handle this\n    timeFormat: {\n      type: 'string',\n      default: '%Y-%m-%d',\n      description: 'Date format for axis labels.'\n    }\n  }\n};\n",
    "export interface StackConfig {\n  sort?: string|string[];\n  offset?: string;\n}\n\nexport const stackConfig = {\n  type: ['boolean', 'object'],\n  default: {},\n  description: 'Enable stacking (for bar and area marks only).',\n  properties: {\n    sort: {\n      oneOf: [{\n        type: 'string',\n        enum: ['ascending', 'descending']\n      },{\n        type: 'array',\n        items: {type: 'string'},\n      }],\n      description: 'Order of the stack. ' +\n        'This can be either a string (either \"descending\" or \"ascending\")' +\n        'or a list of fields to determine the order of stack layers.' +\n        'By default, stack uses descending order.'\n    },\n    offset: {\n      type: 'string',\n      enum: ['zero', 'center', 'normalize']\n      // TODO(#620) refer to Vega spec once it doesn't throw error\n      // enum: vgStackSchema.properties.offset.oneOf[0].enum\n    }\n  }\n};\n",
    "export interface Data {\n  formatType?: string;\n  url?: string;\n  values?: any[];\n  filter?: string;\n  calculate?: VgFormula[];\n}\n\n// TODO move this to one central position\nexport interface VgFormula {\n  field: string;\n  expr: string;\n}\n\nexport var data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv', 'tsv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      default: undefined,\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    },\n    // we generate a vega filter transform\n    filter: {\n      type: 'string',\n      default: undefined,\n      description: 'A string containing the filter Vega expression. Use `datum` to refer to the current data object.'\n    },\n    // we generate a vega formula transform\n    calculate: {\n      type: 'array',\n      default: undefined,\n      description: 'Calculate new field(s) using the provided expresssion(s). Calculation are applied before filter.',\n      items: {\n        type: 'object',\n        properties: {\n          field: {\n            type: 'string',\n            description: 'The field in which to store the computed formula value.'\n          },\n          expr: {\n            type: 'string',\n            description: 'A string containing an expression for the formula. Use the variable `datum` to to refer to the current data object.'\n          }\n        }\n      }\n    }\n  }\n};\n",
    "import {merge} from './schemautil';\nimport {duplicate} from '../util';\n\n\nimport {axis} from './axis.schema';\nimport {FieldDef} from './fielddef.schema';\nimport {legend} from './legend.schema';\nimport {sort} from './sort.schema';\nimport {typicalField, onlyOrdinalField} from './fielddef.schema';\n\nexport interface Encoding {\n  x?: FieldDef;\n  y?: FieldDef;\n  row?: FieldDef;\n  column?: FieldDef;\n  color?: FieldDef;\n  size?: FieldDef;\n  shape?: FieldDef;\n  detail?: FieldDef;\n  text?: FieldDef;\n}\n\n// TODO: remove if possible\nvar requiredNameType = {\n  required: ['field', 'type']\n};\n\nvar x = merge(duplicate(typicalField), requiredNameType, {\n  properties: {\n    scale: {// replacing default values for just these two axes\n      properties: {\n        padding: {default: 1},\n        bandWidth: {default: 21}\n      }\n    },\n    axis: axis,\n    sort: sort\n  }\n});\n\nvar y = duplicate(x);\n\nvar facet = merge(duplicate(onlyOrdinalField), requiredNameType, {\n  properties: {\n    axis: axis,\n    sort: sort\n  }\n});\n\nvar row = merge(duplicate(facet));\nvar column = merge(duplicate(facet));\n\nvar size = merge(duplicate(typicalField), {\n  properties: {\n    legend: legend,\n    sort: sort,\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0,\n      description: 'Size of marks.'\n    }\n  }\n});\n\nvar color = merge(duplicate(typicalField), {\n  properties: {\n    legend: legend,\n    sort: sort,\n    value: {\n      type: 'string',\n      role: 'color',\n      default: '#4682b4',\n      description: 'Color to be used for marks.'\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        quantitativeRange: {\n          type: 'array',\n          default: ['#AFC6A3', '#09622A'], // tableau greens\n          // default: ['#ccece6', '#00441b'], // BuGn.9 [2-8]\n          description: 'Color range to encode quantitative variables.',\n          minItems: 2,\n          maxItems: 2,\n          items: {\n            type: 'string',\n            role: 'color'\n          }\n        }\n      }\n    }\n  }\n});\n\nvar shape = merge(duplicate(onlyOrdinalField), {\n  properties: {\n    legend: legend,\n    sort: sort,\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle',\n      description: 'Mark to be used.'\n    }\n  }\n});\n\nvar detail = merge(duplicate(onlyOrdinalField), {\n  properties: {\n    sort: sort\n  }\n});\n\n// we only put aggregated measure in pivot table\nvar text = merge(duplicate(typicalField), {\n  properties: {\n    sort: sort,\n    value: {\n      type: 'string',\n      default: 'Abc'\n    }\n  }\n});\n\nexport var encoding = {\n  type: 'object',\n  properties: {\n    x: x,\n    y: y,\n    row: row,\n    column: column,\n    size: size,\n    color: color,\n    shape: shape,\n    text: text,\n    detail: detail\n  }\n};\n",
    "import {Axis} from './axis.schema';\nimport {bin, Bin} from './bin.schema';\nimport {Legend} from './legend.schema';\nimport {typicalScale, ordinalOnlyScale, Scale} from './scale.schema';\nimport {Sort} from './sort.schema';\n\nimport {AGGREGATE_OPS} from '../aggregate';\nimport {toMap, duplicate} from '../util';\nimport {merge} from './schemautil';\nimport {TIMEUNITS} from '../timeunit';\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL, Type} from '../type';\n\nexport interface FieldDef {\n  field?: string;\n  type?: Type;\n  value?: any;\n\n  // function\n  aggregate?: string;\n  timeUnit?: string;\n  bin?: boolean | Bin;\n\n  sort?: Sort | string;\n\n  // override vega components\n  axis?: Axis;\n  legend?: Legend | boolean;\n  scale?: Scale;\n\n  // TODO: maybe extend this in other app?\n  // unused metadata -- for other application\n  displayName?: string;\n}\n\nexport var fieldDef = {\n  type: 'object',\n  properties: {\n    field: {\n      type: 'string'\n    },\n    type: {\n      type: 'string',\n      enum: [NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL]\n    },\n    timeUnit: {\n      type: 'string',\n      enum: TIMEUNITS,\n      supportedTypes: toMap([TEMPORAL])\n    },\n    bin: bin,\n  }\n};\n\nexport var aggregate = {\n  type: 'string',\n  enum: AGGREGATE_OPS,\n  supportedEnums: {\n    quantitative: AGGREGATE_OPS,\n    ordinal: ['median','min','max'],\n    nominal: [],\n    temporal: ['mean', 'median', 'min', 'max'], // TODO: revise what should time support\n    '': ['count']\n  },\n  supportedTypes: toMap([QUANTITATIVE, NOMINAL, ORDINAL, TEMPORAL, ''])\n};\n\nexport var typicalField = merge(duplicate(fieldDef), {\n  properties: {\n    aggregate: aggregate,\n    scale: typicalScale\n  }\n});\n\nexport var onlyOrdinalField = merge(duplicate(fieldDef), {\n  properties: {\n    scale: ordinalOnlyScale\n  }\n});\n",
    "export interface Legend {\n  orient?: string;\n  title?: string;\n  format?: string;\n  values?: Array<any>;\n  properties?: any; // TODO declare VgLegendProperties\n}\n\nexport var legend = {\n  default: true,\n  description: 'Properties of a legend or boolean flag for determining whether to show it.',\n  oneOf: [{\n    type: 'object',\n    properties: {\n      orient: {\n        type: 'string',\n        default: undefined,\n        description: 'The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\".'\n      },\n      title: {\n        type: 'string',\n        default: undefined,\n        description: 'A title for the legend. (Shows field name and its function by default.)'\n      },\n      format: {\n        type: 'string',\n        default: undefined,\n        description: 'An optional formatting pattern for legend labels. Vega uses D3\\'s format pattern.'\n      },\n      values: {\n        type: 'array',\n        default: undefined,\n        description: 'Explicitly set the visible legend values.'\n      },\n      properties: {\n        type: 'object',\n        default: undefined,\n        description: 'Optional mark property definitions for custom legend styling. '\n      }\n    }\n  }, {\n    type: 'boolean'\n  }]\n};\n",
    "export var mark = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n",
    "import {toMap, duplicate as clone} from '../util';\nimport {merge} from './schemautil';\nimport {QUANTITATIVE, TEMPORAL} from '../type';\n\nexport interface Scale {\n  type?: string;\n  domain?: any; // TODO: declare vgDataDomain\n  range?: any; // TODO: declare vgRangeDomain\n  round?: boolean;\n\n  // ordinal\n  bandWidth?: number;\n  outerPadding?: number;\n  padding?: number;\n  points?: boolean;\n\n  // typical\n  clamp?: boolean;\n  nice?: boolean|string;\n  exponent?: number;\n  zero?: boolean;\n\n  // color channel only\n  quantitativeRange? : string[];\n\n  // Vega-Lite only\n  useRawDomain?: boolean;\n}\n\nvar scale = {\n  type: 'object',\n  // TODO: refer to Vega's scale schema\n  properties: {\n    /* Common Scale Properties */\n    type: {\n      type: 'string',\n      // TODO(kanitw) read vega's schema here, add description\n      enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n      default: 'linear',\n      supportedTypes: toMap([QUANTITATIVE])\n    },\n    domain: {\n      default: undefined,\n      type: ['array', 'object'],\n      description: 'The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source.'\n    },\n    range: {\n      default: undefined,\n      type: ['array', 'object', 'string'],\n      description: 'The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set.'\n    },\n    round: {\n      default: undefined, // TODO: revise default\n      type: 'boolean',\n      description: 'If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.'\n    }\n  }\n};\n\n\nvar ordinalScaleMixin = {\n  properties: {\n    bandWidth: {\n      type: 'integer',\n      minimum: 0,\n      default: undefined\n    },\n    /* Ordinal Scale Properties */\n    outerPadding: {\n      type: 'number',\n      default: undefined\n      // TODO: add description once it is documented in Vega\n    },\n    padding: {\n      type: 'number',\n      default: undefined,\n      description: 'Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).'\n        },\n    points: {\n      type: 'boolean',\n      default: undefined,\n      description: 'If true, distributes the ordinal values over a quantitative range at uniformly spaced points. The spacing of the points can be adjusted using the padding property. If false, the ordinal scale will construct evenly-spaced bands, rather than points.'\n    }\n  }\n};\n\nvar typicalScaleMixin = {\n  properties: {\n    /* Quantitative and temporal Scale Properties */\n    clamp: {\n      type: 'boolean',\n      default: true,\n      description: 'If true, values that exceed the data domain are clamped to either the minimum or maximum range value'\n    },\n    nice: {\n      default: undefined,\n      oneOf: [\n        {\n          type: 'boolean',\n          description: 'If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96).'\n        },{\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          description: 'If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\".'\n        }\n      ],\n      // FIXME this part might break polestar\n      supportedTypes: toMap([QUANTITATIVE, TEMPORAL]),\n      description: ''\n    },\n\n    /* Quantitative Scale Properties */\n    exponent: {\n      type: 'number',\n      default: undefined,\n      description: 'Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored.'\n    },\n    zero: {\n      type: 'boolean',\n      description: 'If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.',\n      default: undefined,\n      supportedTypes: toMap([QUANTITATIVE, TEMPORAL])\n    },\n\n    /* Vega-lite only Properties */\n    useRawDomain: {\n      type: 'boolean',\n      default: false,\n      description: 'Uses the source data range as scale domain instead of ' +\n                   'aggregated data for aggregate axis. ' +\n                   'This option does not work with sum or count aggregate' +\n                   'as they might have a substantially larger scale range.'\n    }\n  }\n};\n\nexport var ordinalOnlyScale = merge(clone(scale), ordinalScaleMixin);\nexport var typicalScale = merge(clone(scale), ordinalScaleMixin, typicalScaleMixin);\n",
    "// Package of defining Vega-lite Specification's json schema\n\nimport * as schemaUtil from './schemautil';\nimport {mark} from './mark.schema';\nimport {config, Config} from './config.schema';\nimport {data, Data} from './data.schema';\nimport {encoding, Encoding} from './encoding.schema';\nimport {Mark} from '../mark';\n\nexport interface Spec {\n  name?: string;\n  description?: string;\n  data?: Data;\n  mark?: Mark;\n  encoding?: Encoding;\n  config?: Config;\n}\n\n// TODO remove this\nexport {aggregate} from './fielddef.schema';\n\nexport var util = schemaUtil;\n\n/** @type Object Schema of a vega-lite specification */\nexport var schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['mark', 'encoding'],\n  properties: {\n    name: {\n      type: 'string'\n    },\n    description: {\n      type: 'string'\n    },\n    data: data,\n    mark: mark,\n    encoding: encoding,\n    config: config\n  }\n};\n\n/** Instantiate a verbose vl spec from the schema */\nexport function instantiate() {\n  return schemaUtil.instantiate(schema);\n};\n",
    "import * as util from '../util';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nexport function extend(instance, schema) {\n  return merge(instantiate(schema), instance);\n};\n\n// instantiate a schema\nexport function instantiate(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      if (schema.properties.hasOwnProperty(name)) {\n        val = instantiate(schema.properties[name]);\n        if (val !== undefined) {\n          instance[name] = val;\n        }\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return undefined;\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nexport function subtract(instance, defaults) {\n  var changes: any = {};\n  for (var prop in instance) {\n    if (instance.hasOwnProperty(prop)) {\n      var def = defaults[prop];\n      var ins = instance[prop];\n      // Note: does not properly subtract arrays\n      if (!defaults || def !== ins) {\n        if (typeof ins === 'object' && !util.isArray(ins) && def) {\n          var c = subtract(ins, def);\n          if (!isEmpty(c)) {\n            changes[prop] = c;\n          }\n        } else if (util.isArray(ins)) {\n          if (util.isArray(def)) {\n            // check each item in the array\n            if (ins.length === def.length) {\n              var equal = true;\n              for (var i = 0; i < ins.length; i++) {\n                if (ins[i] !== def[i]) {\n                  equal = false;\n                  break;\n                }\n              }\n              if (equal) {\n                continue; // continue with next property\n              }\n            }\n          }\n          changes[prop] = ins;\n        } else {\n          changes[prop] = ins;\n        }\n      }\n    }\n  }\n  return changes;\n};\n\nexport function merge(dest, ...src: any[]) {\n  for (var i = 0; i < src.length; i++) {\n    dest = merge_(dest, src[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge_(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n",
    "import {AGGREGATE_OPS} from '../aggregate';\nimport {ORDINAL, QUANTITATIVE} from '../type';\nimport {toMap} from '../util';\n\nexport interface Sort {\n  field: string;\n  op: string;\n  order?: string;\n}\n\nexport var sort = {\n  default: 'ascending',\n  supportedTypes: toMap([QUANTITATIVE, ORDINAL]),\n  oneOf: [\n    {\n      type: 'string',\n      enum: ['ascending', 'descending', 'unsorted']\n    },\n    { // sort by aggregation of another field\n      type: 'object',\n      required: ['field', 'op'],\n      properties: {\n        field: {\n          type: 'string',\n          description: 'The field name to aggregate over.'\n        },\n        op: {\n          type: 'string',\n          enum: AGGREGATE_OPS,\n          description: 'The field name to aggregate over.'\n        },\n        order: {\n          type: 'string',\n          enum: ['ascending', 'descending']\n        }\n      }\n    }\n  ]\n};\n",
    "/** module for shorthand */\n\nimport {Encoding} from './schema/encoding.schema';\nimport {FieldDef} from './schema/fielddef.schema';\nimport {Spec} from './schema/schema';\n\nimport {AGGREGATE_OPS} from './aggregate';\nimport {TIMEUNITS} from './timeunit';\nimport {SHORT_TYPE, TYPE_FROM_SHORT_TYPE} from './type';\nimport * as vlEncoding from './encoding';\nimport {Mark} from './mark';\n\nexport const DELIM = '|';\nexport const ASSIGN = '=';\nexport const TYPE = ',';\nexport const FUNC = '_';\n\n\nexport function shorten(spec: Spec): string {\n  return 'mark' + ASSIGN + spec.mark +\n    DELIM + shortenEncoding(spec.encoding);\n}\n\nexport function parse(shorthand: string, data?, config?) {\n  let split = shorthand.split(DELIM),\n    mark = split.shift().split(ASSIGN)[1].trim(),\n    encoding = parseEncoding(split.join(DELIM));\n\n  let spec:Spec = {\n    mark: Mark[mark],\n    encoding: encoding\n  };\n\n  if (data !== undefined) {\n    spec.data = data;\n  }\n  if (config !== undefined) {\n    spec.config = config;\n  }\n  return spec;\n}\n\nexport function shortenEncoding(encoding: Encoding): string {\n  return vlEncoding.map(encoding, function(fieldDef, channel) {\n    return channel + ASSIGN + shortenFieldDef(fieldDef);\n  }).join(DELIM);\n}\n\nexport function parseEncoding(encodingShorthand: string): Encoding {\n  return encodingShorthand.split(DELIM).reduce(function(m, e) {\n    var split = e.split(ASSIGN),\n        enctype = split[0].trim(),\n        fieldDefShorthand = split[1];\n\n    m[enctype] = parseFieldDef(fieldDefShorthand);\n    return m;\n  }, {});\n}\n\nexport function shortenFieldDef(fieldDef: FieldDef): string {\n  return (fieldDef.aggregate ? fieldDef.aggregate + FUNC : '') +\n    (fieldDef.timeUnit ? fieldDef.timeUnit + FUNC : '') +\n    (fieldDef.bin ? 'bin' + FUNC : '') +\n    (fieldDef.field || '') + TYPE + SHORT_TYPE[fieldDef.type];\n}\n\nexport function shortenFieldDefs(fieldDefs: FieldDef[], delim = DELIM): string {\n  return fieldDefs.map(shortenFieldDef).join(delim);\n}\n\nexport function parseFieldDef(fieldDefShorthand: string): FieldDef {\n  var split = fieldDefShorthand.split(TYPE);\n\n  var fieldDef: FieldDef = {\n    field: split[0].trim(),\n    type: TYPE_FROM_SHORT_TYPE[split[1].trim()]\n  };\n\n  // check aggregate type\n  for (let i = 0; i < AGGREGATE_OPS.length; i++) {\n    var a = AGGREGATE_OPS[i];\n    if (fieldDef.field.indexOf(a + '_') === 0) {\n      fieldDef.field = fieldDef.field.substr(a.length + 1);\n      if (a === 'count' && fieldDef.field.length === 0) {\n        fieldDef.field = '*';\n      }\n      fieldDef.aggregate = a;\n      break;\n    }\n  }\n\n  for (let i = 0; i < TIMEUNITS.length; i++) {\n    var tu = TIMEUNITS[i];\n    if (fieldDef.field && fieldDef.field.indexOf(tu + '_') === 0) {\n      fieldDef.field = fieldDef.field.substr(fieldDef.field.length + 1);\n      fieldDef.timeUnit = tu;\n      break;\n    }\n  }\n\n  // check bin\n  if (fieldDef.field && fieldDef.field.indexOf('bin_') === 0) {\n    fieldDef.field = fieldDef.field.substr(4);\n    fieldDef.bin = true;\n  }\n\n  return fieldDef;\n}\n",
    "/* Utilities for a Vega-Lite specificiation */\n\nimport {FieldDef} from './schema/fielddef.schema';\nimport {Spec} from './schema/schema';\n\nimport {Model} from './compiler/Model';\nimport {COLOR, SHAPE} from './channel';\nimport * as vlEncoding from './encoding';\nimport {BAR, AREA} from './mark';\nimport {duplicate} from './util';\n\n// TODO: add vl.spec.validate & move stuff from vl.validate to here\n\nexport function alwaysNoOcclusion(spec: Spec): boolean {\n  // FIXME raw OxQ with # of rows = # of O\n  return vlEncoding.isAggregate(spec.encoding);\n}\n\nexport function fieldDefs(spec: Spec): FieldDef[] {\n  // TODO: refactor this once we have composition\n  return vlEncoding.fieldDefs(spec.encoding);\n};\n\nexport function getCleanSpec(spec: Spec): Spec {\n  // TODO: move toSpec to here!\n  return new Model(spec).toSpec(true);\n}\n\nexport function isStack(spec: Spec): boolean {\n  return (vlEncoding.has(spec.encoding, COLOR) || vlEncoding.has(spec.encoding, SHAPE)) &&\n    (spec.mark === BAR || spec.mark === AREA) &&\n    (!spec.config || !spec.config.stack !== false) &&\n    vlEncoding.isAggregate(spec.encoding);\n}\n\n// TODO revise\nexport function transpose(spec: Spec): Spec {\n  var oldenc = spec.encoding,\n    encoding = duplicate(spec.encoding);\n  encoding.x = oldenc.y;\n  encoding.y = oldenc.x;\n  encoding.row = oldenc.column;\n  encoding.column = oldenc.row;\n  spec.encoding = encoding;\n  return spec;\n}\n",
    "export const TIMEUNITS = [\n  'year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'\n];\n",
    "/** Constants and utilities for data type */\n\nexport enum Type {\n  QUANTITATIVE = 'quantitative' as any,\n  ORDINAL = 'ordinal' as any,\n  TEMPORAL = 'temporal' as any,\n  NOMINAL = 'nominal' as any\n}\n\nexport const QUANTITATIVE = Type.QUANTITATIVE;\nexport const ORDINAL = Type.ORDINAL;\nexport const TEMPORAL = Type.TEMPORAL;\nexport const NOMINAL = Type.NOMINAL;\n\n/**\n * Mapping from full type names to short type names.\n * @type {Object}\n */\nexport const SHORT_TYPE = {\n  quantitative: 'Q',\n  temporal: 'T',\n  nominal: 'N',\n  ordinal: 'O'\n};\n/**\n * Mapping from short type names to full type names.\n * @type {Object}\n */\nexport const TYPE_FROM_SHORT_TYPE = {\n  Q: QUANTITATIVE,\n  T: TEMPORAL,\n  O: ORDINAL,\n  N: NOMINAL\n};\n\n/**\n * Get full, lowercase type name for a given type.\n * @param  type\n * @return Full type name.\n */\nexport function getFullName(type: Type): Type {\n  const typeString = <any>type;  // force type as string so we can translate short types\n  return TYPE_FROM_SHORT_TYPE[typeString.toUpperCase()] || // short type is uppercase by default\n         typeString.toLowerCase();\n}\n",
    "/// <reference path=\"../typings/datalib.d.ts\"/>\n\nexport {keys, extend, duplicate, isArray, vals, truncate, toMap, isObject} from 'datalib/src/util';\nexport {range} from 'datalib/src/generate';\n\nexport function contains(array: Array<any>, item: any) {\n  return array.indexOf(item) > -1;\n}\n\nexport function forEach(obj, f: (a, d, k, o) => any, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        f.call(thisArg, obj[k], k, obj);\n      }\n    }\n  }\n}\n\nexport function reduce(obj, f: (a, i, d, k, o) => any, init, thisArg?) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        init = f.call(thisArg, init, obj[k], k, obj);\n      }\n    }\n    return init;\n  }\n}\n\nexport function map(obj, f: (a, d, k, o) => any, thisArg?) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        output.push(f.call(thisArg, obj[k], k, obj));\n      }\n    }\n    return output;\n  }\n}\n\nexport function any(arr: Array<any>, f: (d, k?, i?) => boolean) {\n  var i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (f(arr[k], k, i++)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function all(arr: Array<any>, f: (d, k?, i?) => boolean) {\n  var i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (!f(arr[k], k, i++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// FIXME remove this\nimport dlBin = require('datalib/src/bins/bins');\nexport function getbins(stats, maxbins) {\n  return dlBin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n}\n\nexport function error(message: any) {\n  console.error('[VL Error]', message);\n}\n",
    "import {Spec} from './schema/schema';\n\n// TODO: move to vl.spec.validator?\n\nimport {toMap} from './util';\nimport {BAR} from './mark';\n\ninterface RequiredChannelMap {\n  [mark: string]: Array<string>;\n}\n\n/**\n * Required Encoding Channels for each mark type\n * @type {Object}\n */\nexport const DEFAULT_REQUIRED_CHANNEL_MAP: RequiredChannelMap = {\n  text: ['text'],\n  line: ['x', 'y'],\n  area: ['x', 'y']\n};\n\ninterface SupportedChannelMap {\n  [mark: string]: {\n    [channel: string]: number\n  };\n}\n\n/**\n * Supported Encoding Channel for each mark type\n */\nexport const DEFAULT_SUPPORTED_CHANNEL_TYPE: SupportedChannelMap = {\n  bar: toMap(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\n  line: toMap(['row', 'column', 'x', 'y', 'color', 'detail']), // TODO: add size when Vega supports\n  area: toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n  tick: toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n  circle: toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n  square: toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n  point: toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\n  text: toMap(['row', 'column', 'size', 'color', 'text']) // TODO(#724) revise\n};\n\n// TODO: consider if we should add validate method and\n// requires ZSchema in the main vega-lite repo\n\n/**\n * Further check if encoding mapping of a spec is invalid and\n * return error if it is invalid.\n *\n * This checks if\n * (1) all the required encoding channels for the mark type are specified\n * (2) all the specified encoding channels are supported by the mark type\n * @param  {[type]} spec [description]\n * @param  {RequiredChannelMap  = DefaultRequiredChannelMap}  requiredChannelMap\n * @param  {SupportedChannelMap = DefaultSupportedChannelMap} supportedChannelMap\n * @return {String} Return one reason why the encoding is invalid,\n *                  or null if the encoding is valid.\n */\nexport function getEncodingMappingError(spec: Spec,\n  requiredChannelMap: RequiredChannelMap = DEFAULT_REQUIRED_CHANNEL_MAP,\n  supportedChannelMap: SupportedChannelMap = DEFAULT_SUPPORTED_CHANNEL_TYPE\n  ) {\n  let mark = spec.mark;\n  let encoding = spec.encoding;\n  let requiredChannels = requiredChannelMap[mark];\n  let supportedChannels = supportedChannelMap[mark];\n\n  for (let i in requiredChannels) { // all required channels are in encoding`\n    if (!(requiredChannels[i] in encoding)) {\n      return 'Missing encoding channel \\\"' + requiredChannels[i] +\n        '\\\" for mark \\\"' + mark + '\\\"';\n    }\n  }\n\n  for (let channel in encoding) { // all channels in encoding are supported\n    if (!supportedChannels[channel]) {\n      return 'Encoding channel \\\"' + channel +\n        '\\\" is not supported by mark type \\\"' + mark + '\\\"';\n    }\n  }\n\n  if (mark === BAR && !encoding.x && !encoding.y) {\n    return 'Missing both x and y for bar';\n  }\n\n  return null;\n}\n",
    "import * as vlBin from './bin';\nimport * as vlChannel from './channel';\nimport * as vlData from './data';\nimport * as vlEncoding from './encoding';\nimport * as vlFieldDef from './fielddef';\nimport * as vlCompiler from './compiler/compiler';\nimport * as vlSchema from './schema/schema';\nimport * as vlShorthand from './shorthand';\nimport * as vlSpec from './spec';\nimport * as vlTimeUnit from './timeunit';\nimport * as vlType from './type';\nimport * as vlValidate from './validate';\nimport * as vlUtil from './util';\n\nexport var bin = vlBin;\nexport var channel = vlChannel;\nexport var compiler = vlCompiler;\nexport var compile = vlCompiler.compile;\nexport var data = vlData;\nexport var encoding = vlEncoding;\nexport var fieldDef = vlFieldDef;\nexport var schema = vlSchema;\nexport var shorthand = vlShorthand;\nexport var spec = vlSpec;\nexport var timeUnit = vlTimeUnit;\nexport var type = vlType;\nexport var util = vlUtil;\nexport var validate = vlValidate;\n\nexport const version = '__VERSION__';\n"
  ]
}